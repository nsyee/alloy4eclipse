/*
* generated by Xtext
*/
grammar InternalAls;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package fr.univartois.cril.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.univartois.cril.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import fr.univartois.cril.xtext.services.AlsGrammarAccess;

}

@parser::members {
 
 	private AlsGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AlsGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSpecification
entryRuleSpecification 
:
{ before(grammarAccess.getSpecificationRule()); }
	 ruleSpecification
{ after(grammarAccess.getSpecificationRule()); } 
	 EOF 
;

// Rule Specification
ruleSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecificationAccess().getGroup()); }
(rule__Specification__Group__0)
{ after(grammarAccess.getSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpen
entryRuleOpen 
:
{ before(grammarAccess.getOpenRule()); }
	 ruleOpen
{ after(grammarAccess.getOpenRule()); } 
	 EOF 
;

// Rule Open
ruleOpen
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpenAccess().getGroup()); }
(rule__Open__Group__0)
{ after(grammarAccess.getOpenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParagraph
entryRuleParagraph 
:
{ before(grammarAccess.getParagraphRule()); }
	 ruleParagraph
{ after(grammarAccess.getParagraphRule()); } 
	 EOF 
;

// Rule Paragraph
ruleParagraph
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParagraphAccess().getAlternatives()); }
(rule__Paragraph__Alternatives)
{ after(grammarAccess.getParagraphAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFactDecl
entryRuleFactDecl 
:
{ before(grammarAccess.getFactDeclRule()); }
	 ruleFactDecl
{ after(grammarAccess.getFactDeclRule()); } 
	 EOF 
;

// Rule FactDecl
ruleFactDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFactDeclAccess().getGroup()); }
(rule__FactDecl__Group__0)
{ after(grammarAccess.getFactDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssertDecl
entryRuleAssertDecl 
:
{ before(grammarAccess.getAssertDeclRule()); }
	 ruleAssertDecl
{ after(grammarAccess.getAssertDeclRule()); } 
	 EOF 
;

// Rule AssertDecl
ruleAssertDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssertDeclAccess().getGroup()); }
(rule__AssertDecl__Group__0)
{ after(grammarAccess.getAssertDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunDecl
entryRuleFunDecl 
:
{ before(grammarAccess.getFunDeclRule()); }
	 ruleFunDecl
{ after(grammarAccess.getFunDeclRule()); } 
	 EOF 
;

// Rule FunDecl
ruleFunDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunDeclAccess().getGroup()); }
(rule__FunDecl__Group__0)
{ after(grammarAccess.getFunDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePredDecl
entryRulePredDecl 
:
{ before(grammarAccess.getPredDeclRule()); }
	 rulePredDecl
{ after(grammarAccess.getPredDeclRule()); } 
	 EOF 
;

// Rule PredDecl
rulePredDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPredDeclAccess().getGroup()); }
(rule__PredDecl__Group__0)
{ after(grammarAccess.getPredDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRunDecl
entryRuleRunDecl 
:
{ before(grammarAccess.getRunDeclRule()); }
	 ruleRunDecl
{ after(grammarAccess.getRunDeclRule()); } 
	 EOF 
;

// Rule RunDecl
ruleRunDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRunDeclAccess().getGroup()); }
(rule__RunDecl__Group__0)
{ after(grammarAccess.getRunDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCheckDecl
entryRuleCheckDecl 
:
{ before(grammarAccess.getCheckDeclRule()); }
	 ruleCheckDecl
{ after(grammarAccess.getCheckDeclRule()); } 
	 EOF 
;

// Rule CheckDecl
ruleCheckDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCheckDeclAccess().getGroup()); }
(rule__CheckDecl__Group__0)
{ after(grammarAccess.getCheckDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScope
entryRuleScope 
:
{ before(grammarAccess.getScopeRule()); }
	 ruleScope
{ after(grammarAccess.getScopeRule()); } 
	 EOF 
;

// Rule Scope
ruleScope
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScopeAccess().getAlternatives()); }
(rule__Scope__Alternatives)
{ after(grammarAccess.getScopeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpectation
entryRuleExpectation 
:
{ before(grammarAccess.getExpectationRule()); }
	 ruleExpectation
{ after(grammarAccess.getExpectationRule()); } 
	 EOF 
;

// Rule Expectation
ruleExpectation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpectationAccess().getGroup()); }
(rule__Expectation__Group__0)
{ after(grammarAccess.getExpectationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypescope
entryRuleTypescope 
:
{ before(grammarAccess.getTypescopeRule()); }
	 ruleTypescope
{ after(grammarAccess.getTypescopeRule()); } 
	 EOF 
;

// Rule Typescope
ruleTypescope
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypescopeAccess().getGroup()); }
(rule__Typescope__Group__0)
{ after(grammarAccess.getTypescopeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumDecl
entryRuleEnumDecl 
:
{ before(grammarAccess.getEnumDeclRule()); }
	 ruleEnumDecl
{ after(grammarAccess.getEnumDeclRule()); } 
	 EOF 
;

// Rule EnumDecl
ruleEnumDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumDeclAccess().getGroup()); }
(rule__EnumDecl__Group__0)
{ after(grammarAccess.getEnumDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLetOutDecl
entryRuleLetOutDecl 
:
{ before(grammarAccess.getLetOutDeclRule()); }
	 ruleLetOutDecl
{ after(grammarAccess.getLetOutDeclRule()); } 
	 EOF 
;

// Rule LetOutDecl
ruleLetOutDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLetOutDeclAccess().getGroup()); }
(rule__LetOutDecl__Group__0)
{ after(grammarAccess.getLetOutDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSigDecl
entryRuleSigDecl 
:
{ before(grammarAccess.getSigDeclRule()); }
	 ruleSigDecl
{ after(grammarAccess.getSigDeclRule()); } 
	 EOF 
;

// Rule SigDecl
ruleSigDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSigDeclAccess().getGroup()); }
(rule__SigDecl__Group__0)
{ after(grammarAccess.getSigDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSigQual
entryRuleSigQual 
:
{ before(grammarAccess.getSigQualRule()); }
	 ruleSigQual
{ after(grammarAccess.getSigQualRule()); } 
	 EOF 
;

// Rule SigQual
ruleSigQual
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSigQualAccess().getGroup()); }
(rule__SigQual__Group__0)
{ after(grammarAccess.getSigQualAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSigExt
entryRuleSigExt 
:
{ before(grammarAccess.getSigExtRule()); }
	 ruleSigExt
{ after(grammarAccess.getSigExtRule()); } 
	 EOF 
;

// Rule SigExt
ruleSigExt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSigExtAccess().getAlternatives()); }
(rule__SigExt__Alternatives)
{ after(grammarAccess.getSigExtAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerminalExpression
entryRuleTerminalExpression 
:
{ before(grammarAccess.getTerminalExpressionRule()); }
	 ruleTerminalExpression
{ after(grammarAccess.getTerminalExpressionRule()); } 
	 EOF 
;

// Rule TerminalExpression
ruleTerminalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
(rule__TerminalExpression__Alternatives)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecl
entryRuleDecl 
:
{ before(grammarAccess.getDeclRule()); }
	 ruleDecl
{ after(grammarAccess.getDeclRule()); } 
	 EOF 
;

// Rule Decl
ruleDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclAccess().getGroup()); }
(rule__Decl__Group__0)
{ after(grammarAccess.getDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLetDecl
entryRuleLetDecl 
:
{ before(grammarAccess.getLetDeclRule()); }
	 ruleLetDecl
{ after(grammarAccess.getLetDeclRule()); } 
	 EOF 
;

// Rule LetDecl
ruleLetDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLetDeclAccess().getGroup()); }
(rule__LetDecl__Group__0)
{ after(grammarAccess.getLetDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuant
entryRuleQuant 
:
{ before(grammarAccess.getQuantRule()); }
	 ruleQuant
{ after(grammarAccess.getQuantRule()); } 
	 EOF 
;

// Rule Quant
ruleQuant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuantAccess().getAlternatives()); }
(rule__Quant__Alternatives)
{ after(grammarAccess.getQuantAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinOp
entryRuleBinOp 
:
{ before(grammarAccess.getBinOpRule()); }
	 ruleBinOp
{ after(grammarAccess.getBinOpRule()); } 
	 EOF 
;

// Rule BinOp
ruleBinOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinOpAccess().getGroup()); }
(rule__BinOp__Group__0)
{ after(grammarAccess.getBinOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnOp
entryRuleUnOp 
:
{ before(grammarAccess.getUnOpRule()); }
	 ruleUnOp
{ after(grammarAccess.getUnOpRule()); } 
	 EOF 
;

// Rule UnOp
ruleUnOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnOpAccess().getGroup()); }
(rule__UnOp__Group__0)
{ after(grammarAccess.getUnOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommonQuantUnOp
entryRuleCommonQuantUnOp 
:
{ before(grammarAccess.getCommonQuantUnOpRule()); }
	 ruleCommonQuantUnOp
{ after(grammarAccess.getCommonQuantUnOpRule()); } 
	 EOF 
;

// Rule CommonQuantUnOp
ruleCommonQuantUnOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommonQuantUnOpAccess().getGroup()); }
(rule__CommonQuantUnOp__Group__0)
{ after(grammarAccess.getCommonQuantUnOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareOp
entryRuleCompareOp 
:
{ before(grammarAccess.getCompareOpRule()); }
	 ruleCompareOp
{ after(grammarAccess.getCompareOpRule()); } 
	 EOF 
;

// Rule CompareOp
ruleCompareOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareOpAccess().getAlternatives()); }
(rule__CompareOp__Alternatives)
{ after(grammarAccess.getCompareOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrowOp
entryRuleArrowOp 
:
{ before(grammarAccess.getArrowOpRule()); }
	 ruleArrowOp
{ after(grammarAccess.getArrowOpRule()); } 
	 EOF 
;

// Rule ArrowOp
ruleArrowOp
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrowOpAccess().getGroup()); }
(rule__ArrowOp__Group__0)
{ after(grammarAccess.getArrowOpAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlockOrBar
entryRuleBlockOrBar 
:
{ before(grammarAccess.getBlockOrBarRule()); }
	 ruleBlockOrBar
{ after(grammarAccess.getBlockOrBarRule()); } 
	 EOF 
;

// Rule BlockOrBar
ruleBlockOrBar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockOrBarAccess().getAlternatives()); }
(rule__BlockOrBar__Alternatives)
{ after(grammarAccess.getBlockOrBarAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOpenName
entryRuleOpenName 
:
{ before(grammarAccess.getOpenNameRule()); }
	 ruleOpenName
{ after(grammarAccess.getOpenNameRule()); } 
	 EOF 
;

// Rule OpenName
ruleOpenName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpenNameAccess().getGroup()); }
(rule__OpenName__Group__0)
{ after(grammarAccess.getOpenNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFactName
entryRuleFactName 
:
{ before(grammarAccess.getFactNameRule()); }
	 ruleFactName
{ after(grammarAccess.getFactNameRule()); } 
	 EOF 
;

// Rule FactName
ruleFactName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFactNameAccess().getGroup()); }
(rule__FactName__Group__0)
{ after(grammarAccess.getFactNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssertionName
entryRuleAssertionName 
:
{ before(grammarAccess.getAssertionNameRule()); }
	 ruleAssertionName
{ after(grammarAccess.getAssertionNameRule()); } 
	 EOF 
;

// Rule AssertionName
ruleAssertionName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssertionNameAccess().getGroup()); }
(rule__AssertionName__Group__0)
{ after(grammarAccess.getAssertionNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionName
entryRuleFunctionName 
:
{ before(grammarAccess.getFunctionNameRule()); }
	 ruleFunctionName
{ after(grammarAccess.getFunctionNameRule()); } 
	 EOF 
;

// Rule FunctionName
ruleFunctionName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionNameAccess().getNameAssignment()); }
(rule__FunctionName__NameAssignment)
{ after(grammarAccess.getFunctionNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePredicateName
entryRulePredicateName 
:
{ before(grammarAccess.getPredicateNameRule()); }
	 rulePredicateName
{ after(grammarAccess.getPredicateNameRule()); } 
	 EOF 
;

// Rule PredicateName
rulePredicateName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPredicateNameAccess().getNameAssignment()); }
(rule__PredicateName__NameAssignment)
{ after(grammarAccess.getPredicateNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlias
entryRuleAlias 
:
{ before(grammarAccess.getAliasRule()); }
	 ruleAlias
{ after(grammarAccess.getAliasRule()); } 
	 EOF 
;

// Rule Alias
ruleAlias
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAliasAccess().getNameAssignment()); }
(rule__Alias__NameAssignment)
{ after(grammarAccess.getAliasAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumName
entryRuleEnumName 
:
{ before(grammarAccess.getEnumNameRule()); }
	 ruleEnumName
{ after(grammarAccess.getEnumNameRule()); } 
	 EOF 
;

// Rule EnumName
ruleEnumName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumNameAccess().getGroup()); }
(rule__EnumName__Group__0)
{ after(grammarAccess.getEnumNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumPropertyName
entryRuleEnumPropertyName 
:
{ before(grammarAccess.getEnumPropertyNameRule()); }
	 ruleEnumPropertyName
{ after(grammarAccess.getEnumPropertyNameRule()); } 
	 EOF 
;

// Rule EnumPropertyName
ruleEnumPropertyName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumPropertyNameAccess().getNameAssignment()); }
(rule__EnumPropertyName__NameAssignment)
{ after(grammarAccess.getEnumPropertyNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLetName
entryRuleLetName 
:
{ before(grammarAccess.getLetNameRule()); }
	 ruleLetName
{ after(grammarAccess.getLetNameRule()); } 
	 EOF 
;

// Rule LetName
ruleLetName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLetNameAccess().getGroup()); }
(rule__LetName__Group__0)
{ after(grammarAccess.getLetNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignatureName
entryRuleSignatureName 
:
{ before(grammarAccess.getSignatureNameRule()); }
	 ruleSignatureName
{ after(grammarAccess.getSignatureNameRule()); } 
	 EOF 
;

// Rule SignatureName
ruleSignatureName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignatureNameAccess().getNameAssignment()); }
(rule__SignatureName__NameAssignment)
{ after(grammarAccess.getSignatureNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyName
entryRulePropertyName 
:
{ before(grammarAccess.getPropertyNameRule()); }
	 rulePropertyName
{ after(grammarAccess.getPropertyNameRule()); } 
	 EOF 
;

// Rule PropertyName
rulePropertyName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyNameAccess().getNameAssignment()); }
(rule__PropertyName__NameAssignment)
{ after(grammarAccess.getPropertyNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExactlyName
entryRuleExactlyName 
:
{ before(grammarAccess.getExactlyNameRule()); }
	 ruleExactlyName
{ after(grammarAccess.getExactlyNameRule()); } 
	 EOF 
;

// Rule ExactlyName
ruleExactlyName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExactlyNameAccess().getNameAssignment()); }
(rule__ExactlyName__NameAssignment)
{ after(grammarAccess.getExactlyNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAsName
entryRuleAsName 
:
{ before(grammarAccess.getAsNameRule()); }
	 ruleAsName
{ after(grammarAccess.getAsNameRule()); } 
	 EOF 
;

// Rule AsName
ruleAsName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAsNameAccess().getNameAssignment()); }
(rule__AsName__NameAssignment)
{ after(grammarAccess.getAsNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameAlias
entryRuleNameAlias 
:
{ before(grammarAccess.getNameAliasRule()); }
	 ruleNameAlias
{ after(grammarAccess.getNameAliasRule()); } 
	 EOF 
;

// Rule NameAlias
ruleNameAlias
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAliasAccess().getGroup()); }
(rule__NameAlias__Group__0)
{ after(grammarAccess.getNameAliasAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleName
entryRuleName 
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getGroup()); }
(rule__Name__Group__0)
{ after(grammarAccess.getNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferencesName
entryRuleReferencesName 
:
{ before(grammarAccess.getReferencesNameRule()); }
	 ruleReferencesName
{ after(grammarAccess.getReferencesNameRule()); } 
	 EOF 
;

// Rule ReferencesName
ruleReferencesName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferencesNameAccess().getAlternatives()); }
(rule__ReferencesName__Alternatives)
{ after(grammarAccess.getReferencesNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferencesSig
entryRuleReferencesSig 
:
{ before(grammarAccess.getReferencesSigRule()); }
	 ruleReferencesSig
{ after(grammarAccess.getReferencesSigRule()); } 
	 EOF 
;

// Rule ReferencesSig
ruleReferencesSig
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferencesSigAccess().getGroup()); }
(rule__ReferencesSig__Group__0)
{ after(grammarAccess.getReferencesSigAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRef
entryRuleRef 
:
{ before(grammarAccess.getRefRule()); }
	 ruleRef
{ after(grammarAccess.getRefRule()); } 
	 EOF 
;

// Rule Ref
ruleRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRefAccess().getGroup()); }
(rule__Ref__Group__0)
{ after(grammarAccess.getRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLeftCurlyBracket
entryRuleLeftCurlyBracket 
:
{ before(grammarAccess.getLeftCurlyBracketRule()); }
	 ruleLeftCurlyBracket
{ after(grammarAccess.getLeftCurlyBracketRule()); } 
	 EOF 
;

// Rule LeftCurlyBracket
ruleLeftCurlyBracket
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLeftCurlyBracketAccess().getLeftCurlyBracketAssignment()); }
(rule__LeftCurlyBracket__LeftCurlyBracketAssignment)
{ after(grammarAccess.getLeftCurlyBracketAccess().getLeftCurlyBracketAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRightCurlyBracket
entryRuleRightCurlyBracket 
:
{ before(grammarAccess.getRightCurlyBracketRule()); }
	 ruleRightCurlyBracket
{ after(grammarAccess.getRightCurlyBracketRule()); } 
	 EOF 
;

// Rule RightCurlyBracket
ruleRightCurlyBracket
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRightCurlyBracketAccess().getRightCurlyBracketAssignment()); }
(rule__RightCurlyBracket__RightCurlyBracketAssignment)
{ after(grammarAccess.getRightCurlyBracketAccess().getRightCurlyBracketAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDot
entryRuleDot 
:
{ before(grammarAccess.getDotRule()); }
	 ruleDot
{ after(grammarAccess.getDotRule()); } 
	 EOF 
;

// Rule Dot
ruleDot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDotAccess().getDotAssignment()); }
(rule__Dot__DotAssignment)
{ after(grammarAccess.getDotAccess().getDotAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComma
entryRuleComma 
:
{ before(grammarAccess.getCommaRule()); }
	 ruleComma
{ after(grammarAccess.getCommaRule()); } 
	 EOF 
;

// Rule Comma
ruleComma
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommaAccess().getCommaAssignment()); }
(rule__Comma__CommaAssignment)
{ after(grammarAccess.getCommaAccess().getCommaAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColon
entryRuleColon 
:
{ before(grammarAccess.getColonRule()); }
	 ruleColon
{ after(grammarAccess.getColonRule()); } 
	 EOF 
;

// Rule Colon
ruleColon
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColonAccess().getColonAssignment()); }
(rule__Colon__ColonAssignment)
{ after(grammarAccess.getColonAccess().getColonAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLeftParenthesis
entryRuleLeftParenthesis 
:
{ before(grammarAccess.getLeftParenthesisRule()); }
	 ruleLeftParenthesis
{ after(grammarAccess.getLeftParenthesisRule()); } 
	 EOF 
;

// Rule LeftParenthesis
ruleLeftParenthesis
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLeftParenthesisAccess().getLeftParenthesisAssignment()); }
(rule__LeftParenthesis__LeftParenthesisAssignment)
{ after(grammarAccess.getLeftParenthesisAccess().getLeftParenthesisAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRightParenthesis
entryRuleRightParenthesis 
:
{ before(grammarAccess.getRightParenthesisRule()); }
	 ruleRightParenthesis
{ after(grammarAccess.getRightParenthesisRule()); } 
	 EOF 
;

// Rule RightParenthesis
ruleRightParenthesis
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRightParenthesisAccess().getRightParenthesisAssignment()); }
(rule__RightParenthesis__RightParenthesisAssignment)
{ after(grammarAccess.getRightParenthesisAccess().getRightParenthesisAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLeftSquareBracketKeyword
entryRuleLeftSquareBracketKeyword 
:
{ before(grammarAccess.getLeftSquareBracketKeywordRule()); }
	 ruleLeftSquareBracketKeyword
{ after(grammarAccess.getLeftSquareBracketKeywordRule()); } 
	 EOF 
;

// Rule LeftSquareBracketKeyword
ruleLeftSquareBracketKeyword
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLeftSquareBracketKeywordAccess().getLeftSquareBracketKeywordAssignment()); }
(rule__LeftSquareBracketKeyword__LeftSquareBracketKeywordAssignment)
{ after(grammarAccess.getLeftSquareBracketKeywordAccess().getLeftSquareBracketKeywordAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRightSquareBracketKeyword
entryRuleRightSquareBracketKeyword 
:
{ before(grammarAccess.getRightSquareBracketKeywordRule()); }
	 ruleRightSquareBracketKeyword
{ after(grammarAccess.getRightSquareBracketKeywordRule()); } 
	 EOF 
;

// Rule RightSquareBracketKeyword
ruleRightSquareBracketKeyword
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRightSquareBracketKeywordAccess().getRightSquareBracketKeywordAssignment()); }
(rule__RightSquareBracketKeyword__RightSquareBracketKeywordAssignment)
{ after(grammarAccess.getRightSquareBracketKeywordAccess().getRightSquareBracketKeywordAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Module__Alternatives_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_2_3_1_0()); }
(rule__Module__Group_2_3_1_0__0)
{ after(grammarAccess.getModuleAccess().getGroup_2_3_1_0()); }
)

    |(
{ before(grammarAccess.getModuleAccess().getNameAssignment_2_3_1_1()); }
(rule__Module__NameAssignment_2_3_1_1)
{ after(grammarAccess.getModuleAccess().getNameAssignment_2_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Paragraph__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParagraphAccess().getFactDeclParserRuleCall_0()); }
	ruleFactDecl
{ after(grammarAccess.getParagraphAccess().getFactDeclParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getParagraphAccess().getAssertDeclParserRuleCall_1()); }
	ruleAssertDecl
{ after(grammarAccess.getParagraphAccess().getAssertDeclParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getParagraphAccess().getFunDeclParserRuleCall_2()); }
	ruleFunDecl
{ after(grammarAccess.getParagraphAccess().getFunDeclParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getParagraphAccess().getPredDeclParserRuleCall_3()); }
	rulePredDecl
{ after(grammarAccess.getParagraphAccess().getPredDeclParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getParagraphAccess().getRunDeclParserRuleCall_4()); }
	ruleRunDecl
{ after(grammarAccess.getParagraphAccess().getRunDeclParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getParagraphAccess().getCheckDeclParserRuleCall_5()); }
	ruleCheckDecl
{ after(grammarAccess.getParagraphAccess().getCheckDeclParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getParagraphAccess().getEnumDeclParserRuleCall_6()); }
	ruleEnumDecl
{ after(grammarAccess.getParagraphAccess().getEnumDeclParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getParagraphAccess().getLetOutDeclParserRuleCall_7()); }
	ruleLetOutDecl
{ after(grammarAccess.getParagraphAccess().getLetOutDeclParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getParagraphAccess().getSigDeclParserRuleCall_8()); }
	ruleSigDecl
{ after(grammarAccess.getParagraphAccess().getSigDeclParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getGroup_4_0()); }
(rule__FunDecl__Group_4_0__0)
{ after(grammarAccess.getFunDeclAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getFunDeclAccess().getGroup_4_1()); }
(rule__FunDecl__Group_4_1__0)
{ after(grammarAccess.getFunDeclAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getGroup_4_0()); }
(rule__PredDecl__Group_4_0__0)
{ after(grammarAccess.getPredDeclAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getPredDeclAccess().getGroup_4_1()); }
(rule__PredDecl__Group_4_1__0)
{ after(grammarAccess.getPredDeclAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RunDecl__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunDeclAccess().getName2Assignment_2_0()); }
(rule__RunDecl__Name2Assignment_2_0)
{ after(grammarAccess.getRunDeclAccess().getName2Assignment_2_0()); }
)

    |(
{ before(grammarAccess.getRunDeclAccess().getBlockAssignment_2_1()); }
(rule__RunDecl__BlockAssignment_2_1)
{ after(grammarAccess.getRunDeclAccess().getBlockAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDecl__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckDeclAccess().getNameAssignment_2_0()); }
(rule__CheckDecl__NameAssignment_2_0)
{ after(grammarAccess.getCheckDeclAccess().getNameAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getCheckDeclAccess().getBlockAssignment_2_1()); }
(rule__CheckDecl__BlockAssignment_2_1)
{ after(grammarAccess.getCheckDeclAccess().getBlockAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getGroup_0()); }
(rule__Scope__Group_0__0)
{ after(grammarAccess.getScopeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getScopeAccess().getGroup_1()); }
(rule__Scope__Group_1__0)
{ after(grammarAccess.getScopeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getScopeAccess().getGroup_2()); }
(rule__Scope__Group_2__0)
{ after(grammarAccess.getScopeAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getScopeAccess().getGroup_3()); }
(rule__Scope__Group_3__0)
{ after(grammarAccess.getScopeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Typescope__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypescopeAccess().getNameAssignment_3_0()); }
(rule__Typescope__NameAssignment_3_0)
{ after(grammarAccess.getTypescopeAccess().getNameAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getTypescopeAccess().getAlternatives_3_1()); }
(rule__Typescope__Alternatives_3_1)
{ after(grammarAccess.getTypescopeAccess().getAlternatives_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Typescope__Alternatives_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypescopeAccess().getIntKeyword_3_1_0()); }

	'int' 

{ after(grammarAccess.getTypescopeAccess().getIntKeyword_3_1_0()); }
)

    |(
{ before(grammarAccess.getTypescopeAccess().getSeqKeyword_3_1_1()); }

	'seq' 

{ after(grammarAccess.getTypescopeAccess().getSeqKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getBlockAssignment_2_0()); }
(rule__LetOutDecl__BlockAssignment_2_0)
{ after(grammarAccess.getLetOutDeclAccess().getBlockAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getLetOutDeclAccess().getGroup_2_1()); }
(rule__LetOutDecl__Group_2_1__0)
{ after(grammarAccess.getLetOutDeclAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigQual__SigqAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigQualAccess().getSigqAbstractKeyword_0_0_0()); }

	'abstract' 

{ after(grammarAccess.getSigQualAccess().getSigqAbstractKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getSigQualAccess().getSigqLoneKeyword_0_0_1()); }

	'lone' 

{ after(grammarAccess.getSigQualAccess().getSigqLoneKeyword_0_0_1()); }
)

    |(
{ before(grammarAccess.getSigQualAccess().getSigqOneKeyword_0_0_2()); }

	'one' 

{ after(grammarAccess.getSigQualAccess().getSigqOneKeyword_0_0_2()); }
)

    |(
{ before(grammarAccess.getSigQualAccess().getSigqSomeKeyword_0_0_3()); }

	'some' 

{ after(grammarAccess.getSigQualAccess().getSigqSomeKeyword_0_0_3()); }
)

    |(
{ before(grammarAccess.getSigQualAccess().getSigqPrivateKeyword_0_0_4()); }

	'private' 

{ after(grammarAccess.getSigQualAccess().getSigqPrivateKeyword_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigQual__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigQualAccess().getAbstractKeyword_1_0()); }

	'abstract' 

{ after(grammarAccess.getSigQualAccess().getAbstractKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getSigQualAccess().getLoneKeyword_1_1()); }

	'lone' 

{ after(grammarAccess.getSigQualAccess().getLoneKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getSigQualAccess().getOneKeyword_1_2()); }

	'one' 

{ after(grammarAccess.getSigQualAccess().getOneKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getSigQualAccess().getSomeKeyword_1_3()); }

	'some' 

{ after(grammarAccess.getSigQualAccess().getSomeKeyword_1_3()); }
)

    |(
{ before(grammarAccess.getSigQualAccess().getPrivateKeyword_1_4()); }

	'private' 

{ after(grammarAccess.getSigQualAccess().getPrivateKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigExt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExtAccess().getGroup_0()); }
(rule__SigExt__Group_0__0)
{ after(grammarAccess.getSigExtAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSigExtAccess().getGroup_1()); }
(rule__SigExt__Group_1__0)
{ after(grammarAccess.getSigExtAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1_0()); }
(rule__Expression__Group_1_0__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_1_1()); }
(rule__Expression__Group_1_1__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_1_2()); }
(rule__Expression__Group_1_2__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_1_3()); }
(rule__Expression__Group_1_3__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1_3()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getGroup_1_4()); }
(rule__Expression__Group_1_4__0)
{ after(grammarAccess.getExpressionAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExclamationMarkKeyword_1_2_0_0()); }

	'!' 

{ after(grammarAccess.getExpressionAccess().getExclamationMarkKeyword_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getNotKeyword_1_2_0_1()); }

	'not' 

{ after(grammarAccess.getExpressionAccess().getNotKeyword_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getEqualsSignGreaterThanSignKeyword_1_3_0_0()); }

	'=>' 

{ after(grammarAccess.getExpressionAccess().getEqualsSignGreaterThanSignKeyword_1_3_0_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getImpliesKeyword_1_3_0_1()); }

	'implies' 

{ after(grammarAccess.getExpressionAccess().getImpliesKeyword_1_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
(rule__TerminalExpression__Group_0__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
(rule__TerminalExpression__Group_1__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
(rule__TerminalExpression__Group_2__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
(rule__TerminalExpression__Group_3__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
(rule__TerminalExpression__Group_4__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_5()); }
(rule__TerminalExpression__Group_5__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_6()); }
(rule__TerminalExpression__Group_6__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_7()); }
(rule__TerminalExpression__Group_7__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_8()); }
(rule__TerminalExpression__Group_8__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_9()); }
(rule__TerminalExpression__Group_9__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_9()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_10()); }
(rule__TerminalExpression__Group_10__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_10()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_11()); }
(rule__TerminalExpression__Group_11__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_11()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_12()); }
(rule__TerminalExpression__Group_12__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_12()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_13()); }
(rule__TerminalExpression__Group_13__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_13()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_14()); }
(rule__TerminalExpression__Group_14__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_3_2_0()); }
(rule__TerminalExpression__Group_3_2_0__0)
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_3_2_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getExprAssignment_3_2_1()); }
(rule__TerminalExpression__ExprAssignment_3_2_1)
{ after(grammarAccess.getTerminalExpressionAccess().getExprAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Alternatives_12_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getNameRefAssignment_12_2_0()); }
(rule__TerminalExpression__NameRefAssignment_12_2_0)
{ after(grammarAccess.getTerminalExpressionAccess().getNameRefAssignment_12_2_0()); }
)

    |(
{ before(grammarAccess.getTerminalExpressionAccess().getThisKeyword_12_2_1()); }

	'this' 

{ after(grammarAccess.getTerminalExpressionAccess().getThisKeyword_12_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Quant__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuantAccess().getAllKeyword_0()); }

	'all' 

{ after(grammarAccess.getQuantAccess().getAllKeyword_0()); }
)

    |(
{ before(grammarAccess.getQuantAccess().getSumKeyword_1()); }

	'sum' 

{ after(grammarAccess.getQuantAccess().getSumKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinOp__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinOpAccess().getVerticalLineVerticalLineKeyword_1_0()); }

	'||' 

{ after(grammarAccess.getBinOpAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getOrKeyword_1_1()); }

	'or' 

{ after(grammarAccess.getBinOpAccess().getOrKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getAmpersandAmpersandKeyword_1_2()); }

	'&&' 

{ after(grammarAccess.getBinOpAccess().getAmpersandAmpersandKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getAndKeyword_1_3()); }

	'and' 

{ after(grammarAccess.getBinOpAccess().getAndKeyword_1_3()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getAmpersandKeyword_1_4()); }

	'&' 

{ after(grammarAccess.getBinOpAccess().getAmpersandKeyword_1_4()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1_5()); }

	'<=>' 

{ after(grammarAccess.getBinOpAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1_5()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getIffKeyword_1_6()); }

	'iff' 

{ after(grammarAccess.getBinOpAccess().getIffKeyword_1_6()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getPlusSignKeyword_1_7()); }

	'+' 

{ after(grammarAccess.getBinOpAccess().getPlusSignKeyword_1_7()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getHyphenMinusKeyword_1_8()); }

	'-' 

{ after(grammarAccess.getBinOpAccess().getHyphenMinusKeyword_1_8()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getPlusSignPlusSignKeyword_1_9()); }

	'++' 

{ after(grammarAccess.getBinOpAccess().getPlusSignPlusSignKeyword_1_9()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getLessThanSignColonKeyword_1_10()); }

	'<:' 

{ after(grammarAccess.getBinOpAccess().getLessThanSignColonKeyword_1_10()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getColonGreaterThanSignKeyword_1_11()); }

	':>' 

{ after(grammarAccess.getBinOpAccess().getColonGreaterThanSignKeyword_1_11()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getDotAssignment_1_12()); }
(rule__BinOp__DotAssignment_1_12)
{ after(grammarAccess.getBinOpAccess().getDotAssignment_1_12()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getLessThanSignLessThanSignKeyword_1_13()); }

	'<<' 

{ after(grammarAccess.getBinOpAccess().getLessThanSignLessThanSignKeyword_1_13()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getGreaterThanSignGreaterThanSignKeyword_1_14()); }

	'>>' 

{ after(grammarAccess.getBinOpAccess().getGreaterThanSignGreaterThanSignKeyword_1_14()); }
)

    |(
{ before(grammarAccess.getBinOpAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_15()); }

	'>>>' 

{ after(grammarAccess.getBinOpAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnOp__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnOpAccess().getNotKeyword_1_0()); }

	'not' 

{ after(grammarAccess.getUnOpAccess().getNotKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getUnOpAccess().getSetKeyword_1_1()); }

	'set' 

{ after(grammarAccess.getUnOpAccess().getSetKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getUnOpAccess().getSeqKeyword_1_2()); }

	'seq' 

{ after(grammarAccess.getUnOpAccess().getSeqKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getUnOpAccess().getOpAssignment_1_3()); }
(rule__UnOp__OpAssignment_1_3)
{ after(grammarAccess.getUnOpAccess().getOpAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnOp__OpAlternatives_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnOpAccess().getOpExclamationMarkKeyword_1_3_0_0()); }

	'!' 

{ after(grammarAccess.getUnOpAccess().getOpExclamationMarkKeyword_1_3_0_0()); }
)

    |(
{ before(grammarAccess.getUnOpAccess().getOpNumberSignKeyword_1_3_0_1()); }

	'#' 

{ after(grammarAccess.getUnOpAccess().getOpNumberSignKeyword_1_3_0_1()); }
)

    |(
{ before(grammarAccess.getUnOpAccess().getOpTildeKeyword_1_3_0_2()); }

	'~' 

{ after(grammarAccess.getUnOpAccess().getOpTildeKeyword_1_3_0_2()); }
)

    |(
{ before(grammarAccess.getUnOpAccess().getOpAsteriskKeyword_1_3_0_3()); }

	'*' 

{ after(grammarAccess.getUnOpAccess().getOpAsteriskKeyword_1_3_0_3()); }
)

    |(
{ before(grammarAccess.getUnOpAccess().getOpCircumflexAccentKeyword_1_3_0_4()); }

	'^' 

{ after(grammarAccess.getUnOpAccess().getOpCircumflexAccentKeyword_1_3_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommonQuantUnOp__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommonQuantUnOpAccess().getNoKeyword_1_0()); }

	'no' 

{ after(grammarAccess.getCommonQuantUnOpAccess().getNoKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getCommonQuantUnOpAccess().getSomeKeyword_1_1()); }

	'some' 

{ after(grammarAccess.getCommonQuantUnOpAccess().getSomeKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getCommonQuantUnOpAccess().getLoneKeyword_1_2()); }

	'lone' 

{ after(grammarAccess.getCommonQuantUnOpAccess().getLoneKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getCommonQuantUnOpAccess().getOneKeyword_1_3()); }

	'one' 

{ after(grammarAccess.getCommonQuantUnOpAccess().getOneKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOpAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getCompareOpAccess().getEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getCompareOpAccess().getInKeyword_1()); }

	'in' 

{ after(grammarAccess.getCompareOpAccess().getInKeyword_1()); }
)

    |(
{ before(grammarAccess.getCompareOpAccess().getLessThanSignKeyword_2()); }

	'<' 

{ after(grammarAccess.getCompareOpAccess().getLessThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getCompareOpAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getCompareOpAccess().getGreaterThanSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getCompareOpAccess().getEqualsSignLessThanSignKeyword_4()); }

	'=<' 

{ after(grammarAccess.getCompareOpAccess().getEqualsSignLessThanSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getCompareOpAccess().getLessThanSignEqualsSignKeyword_5()); }

	'<=' 

{ after(grammarAccess.getCompareOpAccess().getLessThanSignEqualsSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getCompareOpAccess().getGreaterThanSignEqualsSignKeyword_6()); }

	'>=' 

{ after(grammarAccess.getCompareOpAccess().getGreaterThanSignEqualsSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrowOp__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowOpAccess().getSomeKeyword_0_0()); }

	'some' 

{ after(grammarAccess.getArrowOpAccess().getSomeKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getArrowOpAccess().getOneKeyword_0_1()); }

	'one' 

{ after(grammarAccess.getArrowOpAccess().getOneKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getArrowOpAccess().getLoneKeyword_0_2()); }

	'lone' 

{ after(grammarAccess.getArrowOpAccess().getLoneKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getArrowOpAccess().getSetKeyword_0_3()); }

	'set' 

{ after(grammarAccess.getArrowOpAccess().getSetKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockOrBar__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockOrBarAccess().getBlockAssignment_0()); }
(rule__BlockOrBar__BlockAssignment_0)
{ after(grammarAccess.getBlockOrBarAccess().getBlockAssignment_0()); }
)

    |(
{ before(grammarAccess.getBlockOrBarAccess().getGroup_1()); }
(rule__BlockOrBar__Group_1__0)
{ after(grammarAccess.getBlockOrBarAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getThisKeyword_0_0()); }

	'this' 

{ after(grammarAccess.getNameAccess().getThisKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getNameAccess().getIDTerminalRuleCall_0_1()); }
	RULE_ID
{ after(grammarAccess.getNameAccess().getIDTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencesName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencesNameAccess().getFactNameParserRuleCall_0()); }
	ruleFactName
{ after(grammarAccess.getReferencesNameAccess().getFactNameParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getReferencesNameAccess().getFunctionNameParserRuleCall_1()); }
	ruleFunctionName
{ after(grammarAccess.getReferencesNameAccess().getFunctionNameParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getReferencesNameAccess().getEnumNameParserRuleCall_2()); }
	ruleEnumName
{ after(grammarAccess.getReferencesNameAccess().getEnumNameParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getReferencesNameAccess().getEnumPropertyNameParserRuleCall_3()); }
	ruleEnumPropertyName
{ after(grammarAccess.getReferencesNameAccess().getEnumPropertyNameParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getReferencesNameAccess().getSignatureNameParserRuleCall_4()); }
	ruleSignatureName
{ after(grammarAccess.getReferencesNameAccess().getSignatureNameParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getReferencesNameAccess().getPropertyNameParserRuleCall_5()); }
	rulePropertyName
{ after(grammarAccess.getReferencesNameAccess().getPropertyNameParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getReferencesNameAccess().getExactlyNameParserRuleCall_6()); }
	ruleExactlyName
{ after(grammarAccess.getReferencesNameAccess().getExactlyNameParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getReferencesNameAccess().getLetNameParserRuleCall_7()); }
	ruleLetName
{ after(grammarAccess.getReferencesNameAccess().getLetNameParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getReferencesNameAccess().getPredicateNameParserRuleCall_8()); }
	rulePredicateName
{ after(grammarAccess.getReferencesNameAccess().getPredicateNameParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencesSig__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencesSigAccess().getNameRefAssignment_1_0()); }
(rule__ReferencesSig__NameRefAssignment_1_0)
{ after(grammarAccess.getReferencesSigAccess().getNameRefAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getReferencesSigAccess().getUnivKeyword_1_1()); }

	'univ' 

{ after(grammarAccess.getReferencesSigAccess().getUnivKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getReferencesSigAccess().getIntKeyword_1_2()); }

	'Int' 

{ after(grammarAccess.getReferencesSigAccess().getIntKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getReferencesSigAccess().getSeqIntKeyword_1_3()); }

	'seq/Int' 

{ after(grammarAccess.getReferencesSigAccess().getSeqIntKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getNameRefAssignment_1_0()); }
(rule__Ref__NameRefAssignment_1_0)
{ after(grammarAccess.getRefAccess().getNameRefAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getRefAccess().getUnivKeyword_1_1()); }

	'univ' 

{ after(grammarAccess.getRefAccess().getUnivKeyword_1_1()); }
)

    |(
{ before(grammarAccess.getRefAccess().getIntKeyword_1_2()); }

	'Int' 

{ after(grammarAccess.getRefAccess().getIntKeyword_1_2()); }
)

    |(
{ before(grammarAccess.getRefAccess().getSeqIntKeyword_1_3()); }

	'seq/Int' 

{ after(grammarAccess.getRefAccess().getSeqIntKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Specification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specification__Group__0__Impl
	rule__Specification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getModuleAssignment_0()); }
(rule__Specification__ModuleAssignment_0)?
{ after(grammarAccess.getSpecificationAccess().getModuleAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specification__Group__1__Impl
	rule__Specification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getOpenAssignment_1()); }
(rule__Specification__OpenAssignment_1)*
{ after(grammarAccess.getSpecificationAccess().getOpenAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Specification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Specification__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getParagraphAssignment_2()); }
(rule__Specification__ParagraphAssignment_2)*
{ after(grammarAccess.getSpecificationAccess().getParagraphAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleKeyword_0()); }

	'module' 

{ after(grammarAccess.getModuleAccess().getModuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleNameAssignment_1()); }
(rule__Module__ModuleNameAssignment_1)
{ after(grammarAccess.getModuleAccess().getModuleNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_2()); }
(rule__Module__Group_2__0)?
{ after(grammarAccess.getModuleAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Module__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_2__0__Impl
	rule__Module__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getLeftAssignment_2_0()); }
(rule__Module__LeftAssignment_2_0)
{ after(grammarAccess.getModuleAccess().getLeftAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_2__1__Impl
	rule__Module__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getExactlyAssignment_2_1()); }
(rule__Module__ExactlyAssignment_2_1)?
{ after(grammarAccess.getModuleAccess().getExactlyAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_2__2__Impl
	rule__Module__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameAssignment_2_2()); }
(rule__Module__NameAssignment_2_2)
{ after(grammarAccess.getModuleAccess().getNameAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_2__3__Impl
	rule__Module__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_2_3()); }
(rule__Module__Group_2_3__0)*
{ after(grammarAccess.getModuleAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getRightAssignment_2_4()); }
(rule__Module__RightAssignment_2_4)
{ after(grammarAccess.getModuleAccess().getRightAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Module__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_2_3__0__Impl
	rule__Module__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getCommaAssignment_2_3_0()); }
(rule__Module__CommaAssignment_2_3_0)
{ after(grammarAccess.getModuleAccess().getCommaAssignment_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getAlternatives_2_3_1()); }
(rule__Module__Alternatives_2_3_1)
{ after(grammarAccess.getModuleAccess().getAlternatives_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Module__Group_2_3_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_2_3_1_0__0__Impl
	rule__Module__Group_2_3_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_2_3_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getExactlyAssignment_2_3_1_0_0()); }
(rule__Module__ExactlyAssignment_2_3_1_0_0)?
{ after(grammarAccess.getModuleAccess().getExactlyAssignment_2_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_2_3_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_2_3_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_2_3_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNumberAssignment_2_3_1_0_1()); }
(rule__Module__NumberAssignment_2_3_1_0_1)
{ after(grammarAccess.getModuleAccess().getNumberAssignment_2_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Open__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Open__Group__0__Impl
	rule__Open__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getPrivateKeyword_0()); }
(
	'private' 
)?
{ after(grammarAccess.getOpenAccess().getPrivateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Open__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Open__Group__1__Impl
	rule__Open__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getOpenNameAssignment_1()); }
(rule__Open__OpenNameAssignment_1)
{ after(grammarAccess.getOpenAccess().getOpenNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Open__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Open__Group__2__Impl
	rule__Open__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getGroup_2()); }
(rule__Open__Group_2__0)?
{ after(grammarAccess.getOpenAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Open__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Open__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getGroup_3()); }
(rule__Open__Group_3__0)?
{ after(grammarAccess.getOpenAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Open__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Open__Group_2__0__Impl
	rule__Open__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getLeftAssignment_2_0()); }
(rule__Open__LeftAssignment_2_0)
{ after(grammarAccess.getOpenAccess().getLeftAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Open__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Open__Group_2__1__Impl
	rule__Open__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getRefAssignment_2_1()); }
(rule__Open__RefAssignment_2_1)
{ after(grammarAccess.getOpenAccess().getRefAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Open__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Open__Group_2__2__Impl
	rule__Open__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getGroup_2_2()); }
(rule__Open__Group_2_2__0)*
{ after(grammarAccess.getOpenAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Open__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Open__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getRightAssignment_2_3()); }
(rule__Open__RightAssignment_2_3)
{ after(grammarAccess.getOpenAccess().getRightAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Open__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Open__Group_2_2__0__Impl
	rule__Open__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getCommaAssignment_2_2_0()); }
(rule__Open__CommaAssignment_2_2_0)
{ after(grammarAccess.getOpenAccess().getCommaAssignment_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Open__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Open__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getRefAssignment_2_2_1()); }
(rule__Open__RefAssignment_2_2_1)
{ after(grammarAccess.getOpenAccess().getRefAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Open__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Open__Group_3__0__Impl
	rule__Open__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getAsKeyword_3_0()); }

	'as' 

{ after(grammarAccess.getOpenAccess().getAsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Open__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Open__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Open__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getNameAsAssignment_3_1()); }
(rule__Open__NameAsAssignment_3_1)
{ after(grammarAccess.getOpenAccess().getNameAsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FactDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FactDecl__Group__0__Impl
	rule__FactDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FactDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactDeclAccess().getFactNameAssignment_0()); }
(rule__FactDecl__FactNameAssignment_0)
{ after(grammarAccess.getFactDeclAccess().getFactNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FactDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FactDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FactDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactDeclAccess().getBlockAssignment_1()); }
(rule__FactDecl__BlockAssignment_1)
{ after(grammarAccess.getFactDeclAccess().getBlockAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssertDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertDecl__Group__0__Impl
	rule__AssertDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertDeclAccess().getAssertionNameAssignment_0()); }
(rule__AssertDecl__AssertionNameAssignment_0)
{ after(grammarAccess.getAssertDeclAccess().getAssertionNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssertDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertDecl__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertDeclAccess().getBlockAssignment_1()); }
(rule__AssertDecl__BlockAssignment_1)
{ after(grammarAccess.getAssertDeclAccess().getBlockAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group__0__Impl
	rule__FunDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getPrivateKeyword_0()); }
(
	'private' 
)?
{ after(grammarAccess.getFunDeclAccess().getPrivateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group__1__Impl
	rule__FunDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getFunKeyword_1()); }

	'fun' 

{ after(grammarAccess.getFunDeclAccess().getFunKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group__2__Impl
	rule__FunDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getGroup_2()); }
(rule__FunDecl__Group_2__0)?
{ after(grammarAccess.getFunDeclAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group__3__Impl
	rule__FunDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getFunctionNameAssignment_3()); }
(rule__FunDecl__FunctionNameAssignment_3)
{ after(grammarAccess.getFunDeclAccess().getFunctionNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group__4__Impl
	rule__FunDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getAlternatives_4()); }
(rule__FunDecl__Alternatives_4)?
{ after(grammarAccess.getFunDeclAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group__5__Impl
	rule__FunDecl__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getColonAssignment_5()); }
(rule__FunDecl__ColonAssignment_5)
{ after(grammarAccess.getFunDeclAccess().getColonAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group__6__Impl
	rule__FunDecl__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getExprAssignment_6()); }
(rule__FunDecl__ExprAssignment_6)
{ after(grammarAccess.getFunDeclAccess().getExprAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getBlockAssignment_7()); }
(rule__FunDecl__BlockAssignment_7)
{ after(grammarAccess.getFunDeclAccess().getBlockAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__FunDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_2__0__Impl
	rule__FunDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getRefAssignment_2_0()); }
(rule__FunDecl__RefAssignment_2_0)
{ after(grammarAccess.getFunDeclAccess().getRefAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getDotAssignment_2_1()); }
(rule__FunDecl__DotAssignment_2_1)
{ after(grammarAccess.getFunDeclAccess().getDotAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunDecl__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_0__0__Impl
	rule__FunDecl__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getLeftSAssignment_4_0_0()); }
(rule__FunDecl__LeftSAssignment_4_0_0)
{ after(grammarAccess.getFunDeclAccess().getLeftSAssignment_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_0__1__Impl
	rule__FunDecl__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getGroup_4_0_1()); }
(rule__FunDecl__Group_4_0_1__0)?
{ after(grammarAccess.getFunDeclAccess().getGroup_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getRightSAssignment_4_0_2()); }
(rule__FunDecl__RightSAssignment_4_0_2)
{ after(grammarAccess.getFunDeclAccess().getRightSAssignment_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunDecl__Group_4_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_0_1__0__Impl
	rule__FunDecl__Group_4_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getDeclAssignment_4_0_1_0()); }
(rule__FunDecl__DeclAssignment_4_0_1_0)
{ after(grammarAccess.getFunDeclAccess().getDeclAssignment_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group_4_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getGroup_4_0_1_1()); }
(rule__FunDecl__Group_4_0_1_1__0)*
{ after(grammarAccess.getFunDeclAccess().getGroup_4_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunDecl__Group_4_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_0_1_1__0__Impl
	rule__FunDecl__Group_4_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getCommaAssignment_4_0_1_1_0()); }
(rule__FunDecl__CommaAssignment_4_0_1_1_0)
{ after(grammarAccess.getFunDeclAccess().getCommaAssignment_4_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group_4_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getDeclAssignment_4_0_1_1_1()); }
(rule__FunDecl__DeclAssignment_4_0_1_1_1)
{ after(grammarAccess.getFunDeclAccess().getDeclAssignment_4_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunDecl__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_1__0__Impl
	rule__FunDecl__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getLeftPAssignment_4_1_0()); }
(rule__FunDecl__LeftPAssignment_4_1_0)
{ after(grammarAccess.getFunDeclAccess().getLeftPAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_1__1__Impl
	rule__FunDecl__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getGroup_4_1_1()); }
(rule__FunDecl__Group_4_1_1__0)?
{ after(grammarAccess.getFunDeclAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getRightPAssignment_4_1_2()); }
(rule__FunDecl__RightPAssignment_4_1_2)
{ after(grammarAccess.getFunDeclAccess().getRightPAssignment_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunDecl__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_1_1__0__Impl
	rule__FunDecl__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getDeclAssignment_4_1_1_0()); }
(rule__FunDecl__DeclAssignment_4_1_1_0)
{ after(grammarAccess.getFunDeclAccess().getDeclAssignment_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getGroup_4_1_1_1()); }
(rule__FunDecl__Group_4_1_1_1__0)*
{ after(grammarAccess.getFunDeclAccess().getGroup_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunDecl__Group_4_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_1_1_1__0__Impl
	rule__FunDecl__Group_4_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getCommaAssignment_4_1_1_1_0()); }
(rule__FunDecl__CommaAssignment_4_1_1_1_0)
{ after(grammarAccess.getFunDeclAccess().getCommaAssignment_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunDecl__Group_4_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunDecl__Group_4_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__Group_4_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getDeclAssignment_4_1_1_1_1()); }
(rule__FunDecl__DeclAssignment_4_1_1_1_1)
{ after(grammarAccess.getFunDeclAccess().getDeclAssignment_4_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PredDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group__0__Impl
	rule__PredDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getPrivateKeyword_0()); }
(
	'private' 
)?
{ after(grammarAccess.getPredDeclAccess().getPrivateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group__1__Impl
	rule__PredDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getPredKeyword_1()); }

	'pred' 

{ after(grammarAccess.getPredDeclAccess().getPredKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group__2__Impl
	rule__PredDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getGroup_2()); }
(rule__PredDecl__Group_2__0)?
{ after(grammarAccess.getPredDeclAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group__3__Impl
	rule__PredDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getPredicateNameAssignment_3()); }
(rule__PredDecl__PredicateNameAssignment_3)
{ after(grammarAccess.getPredDeclAccess().getPredicateNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group__4__Impl
	rule__PredDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getAlternatives_4()); }
(rule__PredDecl__Alternatives_4)?
{ after(grammarAccess.getPredDeclAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getBlockAssignment_5()); }
(rule__PredDecl__BlockAssignment_5)
{ after(grammarAccess.getPredDeclAccess().getBlockAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PredDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_2__0__Impl
	rule__PredDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getRefAssignment_2_0()); }
(rule__PredDecl__RefAssignment_2_0)
{ after(grammarAccess.getPredDeclAccess().getRefAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getDotAssignment_2_1()); }
(rule__PredDecl__DotAssignment_2_1)
{ after(grammarAccess.getPredDeclAccess().getDotAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PredDecl__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_0__0__Impl
	rule__PredDecl__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getLeftSAssignment_4_0_0()); }
(rule__PredDecl__LeftSAssignment_4_0_0)
{ after(grammarAccess.getPredDeclAccess().getLeftSAssignment_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_0__1__Impl
	rule__PredDecl__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getGroup_4_0_1()); }
(rule__PredDecl__Group_4_0_1__0)?
{ after(grammarAccess.getPredDeclAccess().getGroup_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getRightSAssignment_4_0_2()); }
(rule__PredDecl__RightSAssignment_4_0_2)
{ after(grammarAccess.getPredDeclAccess().getRightSAssignment_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PredDecl__Group_4_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_0_1__0__Impl
	rule__PredDecl__Group_4_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getDeclAssignment_4_0_1_0()); }
(rule__PredDecl__DeclAssignment_4_0_1_0)
{ after(grammarAccess.getPredDeclAccess().getDeclAssignment_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group_4_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getGroup_4_0_1_1()); }
(rule__PredDecl__Group_4_0_1_1__0)*
{ after(grammarAccess.getPredDeclAccess().getGroup_4_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PredDecl__Group_4_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_0_1_1__0__Impl
	rule__PredDecl__Group_4_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getCommaAssignment_4_0_1_1_0()); }
(rule__PredDecl__CommaAssignment_4_0_1_1_0)
{ after(grammarAccess.getPredDeclAccess().getCommaAssignment_4_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group_4_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getDeclAssignment_4_0_1_1_1()); }
(rule__PredDecl__DeclAssignment_4_0_1_1_1)
{ after(grammarAccess.getPredDeclAccess().getDeclAssignment_4_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PredDecl__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_1__0__Impl
	rule__PredDecl__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getLeftPAssignment_4_1_0()); }
(rule__PredDecl__LeftPAssignment_4_1_0)
{ after(grammarAccess.getPredDeclAccess().getLeftPAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_1__1__Impl
	rule__PredDecl__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getGroup_4_1_1()); }
(rule__PredDecl__Group_4_1_1__0)?
{ after(grammarAccess.getPredDeclAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group_4_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getRightPAssignment_4_1_2()); }
(rule__PredDecl__RightPAssignment_4_1_2)
{ after(grammarAccess.getPredDeclAccess().getRightPAssignment_4_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PredDecl__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_1_1__0__Impl
	rule__PredDecl__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getDeclAssignment_4_1_1_0()); }
(rule__PredDecl__DeclAssignment_4_1_1_0)
{ after(grammarAccess.getPredDeclAccess().getDeclAssignment_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getGroup_4_1_1_1()); }
(rule__PredDecl__Group_4_1_1_1__0)*
{ after(grammarAccess.getPredDeclAccess().getGroup_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PredDecl__Group_4_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_1_1_1__0__Impl
	rule__PredDecl__Group_4_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getCommaAssignment_4_1_1_1_0()); }
(rule__PredDecl__CommaAssignment_4_1_1_1_0)
{ after(grammarAccess.getPredDeclAccess().getCommaAssignment_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PredDecl__Group_4_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PredDecl__Group_4_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__Group_4_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getDeclAssignment_4_1_1_1_1()); }
(rule__PredDecl__DeclAssignment_4_1_1_1_1)
{ after(grammarAccess.getPredDeclAccess().getDeclAssignment_4_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RunDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RunDecl__Group__0__Impl
	rule__RunDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RunDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunDeclAccess().getGroup_0()); }
(rule__RunDecl__Group_0__0)?
{ after(grammarAccess.getRunDeclAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RunDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RunDecl__Group__1__Impl
	rule__RunDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RunDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunDeclAccess().getRunKeyword_1()); }

	'run' 

{ after(grammarAccess.getRunDeclAccess().getRunKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RunDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RunDecl__Group__2__Impl
	rule__RunDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RunDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunDeclAccess().getAlternatives_2()); }
(rule__RunDecl__Alternatives_2)
{ after(grammarAccess.getRunDeclAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RunDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RunDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RunDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunDeclAccess().getScopeAssignment_3()); }
(rule__RunDecl__ScopeAssignment_3)
{ after(grammarAccess.getRunDeclAccess().getScopeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RunDecl__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RunDecl__Group_0__0__Impl
	rule__RunDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RunDecl__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunDeclAccess().getRunNameAssignment_0_0()); }
(rule__RunDecl__RunNameAssignment_0_0)
{ after(grammarAccess.getRunDeclAccess().getRunNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RunDecl__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RunDecl__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RunDecl__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunDeclAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getRunDeclAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CheckDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckDecl__Group__0__Impl
	rule__CheckDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckDeclAccess().getGroup_0()); }
(rule__CheckDecl__Group_0__0)?
{ after(grammarAccess.getCheckDeclAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckDecl__Group__1__Impl
	rule__CheckDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckDeclAccess().getCheckKeyword_1()); }

	'check' 

{ after(grammarAccess.getCheckDeclAccess().getCheckKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckDecl__Group__2__Impl
	rule__CheckDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckDeclAccess().getAlternatives_2()); }
(rule__CheckDecl__Alternatives_2)
{ after(grammarAccess.getCheckDeclAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckDeclAccess().getScopeAssignment_3()); }
(rule__CheckDecl__ScopeAssignment_3)
{ after(grammarAccess.getCheckDeclAccess().getScopeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CheckDecl__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckDecl__Group_0__0__Impl
	rule__CheckDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDecl__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckDeclAccess().getCheckNameAssignment_0_0()); }
(rule__CheckDecl__CheckNameAssignment_0_0)
{ after(grammarAccess.getCheckDeclAccess().getCheckNameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CheckDecl__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CheckDecl__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDecl__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckDeclAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getCheckDeclAccess().getColonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Scope__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_0__0__Impl
	rule__Scope__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getScopeAction_0_0()); }
(

)
{ after(grammarAccess.getScopeAccess().getScopeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_0__1__Impl
	rule__Scope__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getForKeyword_0_1()); }

	'for' 

{ after(grammarAccess.getScopeAccess().getForKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_0__2__Impl
	rule__Scope__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getINTTerminalRuleCall_0_2()); }
	RULE_INT
{ after(grammarAccess.getScopeAccess().getINTTerminalRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getExpectAssignment_0_3()); }
(rule__Scope__ExpectAssignment_0_3)?
{ after(grammarAccess.getScopeAccess().getExpectAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Scope__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_1__0__Impl
	rule__Scope__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getScopeAction_1_0()); }
(

)
{ after(grammarAccess.getScopeAccess().getScopeAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_1__1__Impl
	rule__Scope__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getForKeyword_1_1()); }

	'for' 

{ after(grammarAccess.getScopeAccess().getForKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_1__2__Impl
	rule__Scope__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getINTTerminalRuleCall_1_2()); }
	RULE_INT
{ after(grammarAccess.getScopeAccess().getINTTerminalRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_1__3__Impl
	rule__Scope__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getButKeyword_1_3()); }

	'but' 

{ after(grammarAccess.getScopeAccess().getButKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_1__4__Impl
	rule__Scope__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getTypescopeAssignment_1_4()); }
(rule__Scope__TypescopeAssignment_1_4)
{ after(grammarAccess.getScopeAccess().getTypescopeAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_1__5__Impl
	rule__Scope__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getGroup_1_5()); }
(rule__Scope__Group_1_5__0)*
{ after(grammarAccess.getScopeAccess().getGroup_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getExpectAssignment_1_6()); }
(rule__Scope__ExpectAssignment_1_6)?
{ after(grammarAccess.getScopeAccess().getExpectAssignment_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Scope__Group_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_1_5__0__Impl
	rule__Scope__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getCommaAssignment_1_5_0()); }
(rule__Scope__CommaAssignment_1_5_0)
{ after(grammarAccess.getScopeAccess().getCommaAssignment_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_1_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getTypescopeAssignment_1_5_1()); }
(rule__Scope__TypescopeAssignment_1_5_1)
{ after(grammarAccess.getScopeAccess().getTypescopeAssignment_1_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Scope__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_2__0__Impl
	rule__Scope__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getScopeAction_2_0()); }
(

)
{ after(grammarAccess.getScopeAccess().getScopeAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_2__1__Impl
	rule__Scope__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getForKeyword_2_1()); }

	'for' 

{ after(grammarAccess.getScopeAccess().getForKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_2__2__Impl
	rule__Scope__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getTypescopeAssignment_2_2()); }
(rule__Scope__TypescopeAssignment_2_2)
{ after(grammarAccess.getScopeAccess().getTypescopeAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_2__3__Impl
	rule__Scope__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getGroup_2_3()); }
(rule__Scope__Group_2_3__0)*
{ after(grammarAccess.getScopeAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getExpectAssignment_2_4()); }
(rule__Scope__ExpectAssignment_2_4)?
{ after(grammarAccess.getScopeAccess().getExpectAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Scope__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_2_3__0__Impl
	rule__Scope__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getCommaAssignment_2_3_0()); }
(rule__Scope__CommaAssignment_2_3_0)
{ after(grammarAccess.getScopeAccess().getCommaAssignment_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getTypescopeAssignment_2_3_1()); }
(rule__Scope__TypescopeAssignment_2_3_1)
{ after(grammarAccess.getScopeAccess().getTypescopeAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Scope__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_3__0__Impl
	rule__Scope__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getScopeAction_3_0()); }
(

)
{ after(grammarAccess.getScopeAccess().getScopeAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Scope__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getExpectAssignment_3_1()); }
(rule__Scope__ExpectAssignment_3_1)?
{ after(grammarAccess.getScopeAccess().getExpectAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expectation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expectation__Group__0__Impl
	rule__Expectation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expectation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectationAccess().getExpectKeyword_0()); }

	'expect' 

{ after(grammarAccess.getExpectationAccess().getExpectKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expectation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expectation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expectation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectationAccess().getValueAssignment_1()); }
(rule__Expectation__ValueAssignment_1)
{ after(grammarAccess.getExpectationAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Typescope__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typescope__Group__0__Impl
	rule__Typescope__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Typescope__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypescopeAccess().getTypescopeAction_0()); }
(

)
{ after(grammarAccess.getTypescopeAccess().getTypescopeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typescope__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typescope__Group__1__Impl
	rule__Typescope__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Typescope__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypescopeAccess().getExactlyKeyword_1()); }
(
	'exactly' 
)?
{ after(grammarAccess.getTypescopeAccess().getExactlyKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typescope__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typescope__Group__2__Impl
	rule__Typescope__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Typescope__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypescopeAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getTypescopeAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Typescope__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Typescope__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Typescope__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypescopeAccess().getAlternatives_3()); }
(rule__Typescope__Alternatives_3)
{ after(grammarAccess.getTypescopeAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDecl__Group__0__Impl
	rule__EnumDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclAccess().getEnumNameAssignment_0()); }
(rule__EnumDecl__EnumNameAssignment_0)
{ after(grammarAccess.getEnumDeclAccess().getEnumNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDecl__Group__1__Impl
	rule__EnumDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclAccess().getLeftCAssignment_1()); }
(rule__EnumDecl__LeftCAssignment_1)
{ after(grammarAccess.getEnumDeclAccess().getLeftCAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDecl__Group__2__Impl
	rule__EnumDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclAccess().getPropertyEnumAssignment_2()); }
(rule__EnumDecl__PropertyEnumAssignment_2)
{ after(grammarAccess.getEnumDeclAccess().getPropertyEnumAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDecl__Group__3__Impl
	rule__EnumDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclAccess().getGroup_3()); }
(rule__EnumDecl__Group_3__0)*
{ after(grammarAccess.getEnumDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclAccess().getRightCAssignment_4()); }
(rule__EnumDecl__RightCAssignment_4)
{ after(grammarAccess.getEnumDeclAccess().getRightCAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EnumDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDecl__Group_3__0__Impl
	rule__EnumDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclAccess().getCommaAssignment_3_0()); }
(rule__EnumDecl__CommaAssignment_3_0)
{ after(grammarAccess.getEnumDeclAccess().getCommaAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumDecl__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclAccess().getPropertyEnumAssignment_3_1()); }
(rule__EnumDecl__PropertyEnumAssignment_3_1)
{ after(grammarAccess.getEnumDeclAccess().getPropertyEnumAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetOutDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetOutDecl__Group__0__Impl
	rule__LetOutDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getLetNameAssignment_0()); }
(rule__LetOutDecl__LetNameAssignment_0)
{ after(grammarAccess.getLetOutDeclAccess().getLetNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetOutDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetOutDecl__Group__1__Impl
	rule__LetOutDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getGroup_1()); }
(rule__LetOutDecl__Group_1__0)?
{ after(grammarAccess.getLetOutDeclAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetOutDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetOutDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getAlternatives_2()); }
(rule__LetOutDecl__Alternatives_2)
{ after(grammarAccess.getLetOutDeclAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LetOutDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetOutDecl__Group_1__0__Impl
	rule__LetOutDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getLeftSAssignment_1_0()); }
(rule__LetOutDecl__LeftSAssignment_1_0)
{ after(grammarAccess.getLetOutDeclAccess().getLeftSAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetOutDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetOutDecl__Group_1__1__Impl
	rule__LetOutDecl__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getGroup_1_1()); }
(rule__LetOutDecl__Group_1_1__0)?
{ after(grammarAccess.getLetOutDeclAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetOutDecl__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetOutDecl__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getRightSAssignment_1_2()); }
(rule__LetOutDecl__RightSAssignment_1_2)
{ after(grammarAccess.getLetOutDeclAccess().getRightSAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LetOutDecl__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetOutDecl__Group_1_1__0__Impl
	rule__LetOutDecl__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getNameRefAssignment_1_1_0()); }
(rule__LetOutDecl__NameRefAssignment_1_1_0)
{ after(grammarAccess.getLetOutDeclAccess().getNameRefAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetOutDecl__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetOutDecl__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getGroup_1_1_1()); }
(rule__LetOutDecl__Group_1_1_1__0)*
{ after(grammarAccess.getLetOutDeclAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetOutDecl__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetOutDecl__Group_1_1_1__0__Impl
	rule__LetOutDecl__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getCommaAssignment_1_1_1_0()); }
(rule__LetOutDecl__CommaAssignment_1_1_1_0)
{ after(grammarAccess.getLetOutDeclAccess().getCommaAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetOutDecl__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetOutDecl__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getNameRefAssignment_1_1_1_1()); }
(rule__LetOutDecl__NameRefAssignment_1_1_1_1)
{ after(grammarAccess.getLetOutDeclAccess().getNameRefAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetOutDecl__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetOutDecl__Group_2_1__0__Impl
	rule__LetOutDecl__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getEqualsSignKeyword_2_1_0()); }

	'=' 

{ after(grammarAccess.getLetOutDeclAccess().getEqualsSignKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetOutDecl__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetOutDecl__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getExprNameAssignment_2_1_1()); }
(rule__LetOutDecl__ExprNameAssignment_2_1_1)
{ after(grammarAccess.getLetOutDeclAccess().getExprNameAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SigDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group__0__Impl
	rule__SigDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getSigQualParserRuleCall_0()); }
(	ruleSigQual)?
{ after(grammarAccess.getSigDeclAccess().getSigQualParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group__1__Impl
	rule__SigDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getSigKeyword_1()); }

	'sig' 

{ after(grammarAccess.getSigDeclAccess().getSigKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group__2__Impl
	rule__SigDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getSignatureNameAssignment_2()); }
(rule__SigDecl__SignatureNameAssignment_2)
{ after(grammarAccess.getSigDeclAccess().getSignatureNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group__3__Impl
	rule__SigDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getGroup_3()); }
(rule__SigDecl__Group_3__0)*
{ after(grammarAccess.getSigDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group__4__Impl
	rule__SigDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getSigExtAssignment_4()); }
(rule__SigDecl__SigExtAssignment_4)?
{ after(grammarAccess.getSigDeclAccess().getSigExtAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigDecl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group__5__Impl
	rule__SigDecl__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getSigDeclAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigDecl__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group__6__Impl
	rule__SigDecl__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getGroup_6()); }
(rule__SigDecl__Group_6__0)?
{ after(grammarAccess.getSigDeclAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigDecl__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group__7__Impl
	rule__SigDecl__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getSigDeclAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigDecl__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getBlockAssignment_8()); }
(rule__SigDecl__BlockAssignment_8)?
{ after(grammarAccess.getSigDeclAccess().getBlockAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__SigDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group_3__0__Impl
	rule__SigDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getCommaAssignment_3_0()); }
(rule__SigDecl__CommaAssignment_3_0)
{ after(grammarAccess.getSigDeclAccess().getCommaAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getSignatureNameAssignment_3_1()); }
(rule__SigDecl__SignatureNameAssignment_3_1)
{ after(grammarAccess.getSigDeclAccess().getSignatureNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SigDecl__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group_6__0__Impl
	rule__SigDecl__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getDeclAssignment_6_0()); }
(rule__SigDecl__DeclAssignment_6_0)
{ after(grammarAccess.getSigDeclAccess().getDeclAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigDecl__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getGroup_6_1()); }
(rule__SigDecl__Group_6_1__0)*
{ after(grammarAccess.getSigDeclAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SigDecl__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group_6_1__0__Impl
	rule__SigDecl__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getComma2Assignment_6_1_0()); }
(rule__SigDecl__Comma2Assignment_6_1_0)
{ after(grammarAccess.getSigDeclAccess().getComma2Assignment_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigDecl__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigDecl__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getDeclAssignment_6_1_1()); }
(rule__SigDecl__DeclAssignment_6_1_1)
{ after(grammarAccess.getSigDeclAccess().getDeclAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SigQual__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigQual__Group__0__Impl
	rule__SigQual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SigQual__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigQualAccess().getSigqAssignment_0()); }
(rule__SigQual__SigqAssignment_0)
{ after(grammarAccess.getSigQualAccess().getSigqAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigQual__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigQual__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SigQual__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigQualAccess().getAlternatives_1()); }
(rule__SigQual__Alternatives_1)*
{ after(grammarAccess.getSigQualAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SigExt__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigExt__Group_0__0__Impl
	rule__SigExt__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SigExt__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExtAccess().getExtendsKeyword_0_0()); }

	'extends' 

{ after(grammarAccess.getSigExtAccess().getExtendsKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigExt__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigExt__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SigExt__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExtAccess().getRefAssignment_0_1()); }
(rule__SigExt__RefAssignment_0_1)
{ after(grammarAccess.getSigExtAccess().getRefAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SigExt__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigExt__Group_1__0__Impl
	rule__SigExt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SigExt__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExtAccess().getInKeyword_1_0()); }

	'in' 

{ after(grammarAccess.getSigExtAccess().getInKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigExt__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigExt__Group_1__1__Impl
	rule__SigExt__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SigExt__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExtAccess().getRefAssignment_1_1()); }
(rule__SigExt__RefAssignment_1_1)
{ after(grammarAccess.getSigExtAccess().getRefAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigExt__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigExt__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SigExt__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExtAccess().getGroup_1_2()); }
(rule__SigExt__Group_1_2__0)*
{ after(grammarAccess.getSigExtAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SigExt__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigExt__Group_1_2__0__Impl
	rule__SigExt__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SigExt__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExtAccess().getPlusSignKeyword_1_2_0()); }

	'+' 

{ after(grammarAccess.getSigExtAccess().getPlusSignKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SigExt__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SigExt__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SigExt__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExtAccess().getRef2Assignment_1_2_1()); }
(rule__SigExt__Ref2Assignment_1_2_1)
{ after(grammarAccess.getSigExtAccess().getRef2Assignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getTerminalExpressionParserRuleCall_0()); }
	ruleTerminalExpression
{ after(grammarAccess.getExpressionAccess().getTerminalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives_1()); }
(rule__Expression__Alternatives_1)*
{ after(grammarAccess.getExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0__0__Impl
	rule__Expression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBinOpAssignment_1_0_0()); }
(rule__Expression__BinOpAssignment_1_0_0)
{ after(grammarAccess.getExpressionAccess().getBinOpAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprAssignment_1_0_1()); }
(rule__Expression__ExprAssignment_1_0_1)
{ after(grammarAccess.getExpressionAccess().getExprAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_1__0__Impl
	rule__Expression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArrowOpAssignment_1_1_0()); }
(rule__Expression__ArrowOpAssignment_1_1_0)
{ after(grammarAccess.getExpressionAccess().getArrowOpAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprAssignment_1_1_1()); }
(rule__Expression__ExprAssignment_1_1_1)
{ after(grammarAccess.getExpressionAccess().getExprAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_2__0__Impl
	rule__Expression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives_1_2_0()); }
(rule__Expression__Alternatives_1_2_0)?
{ after(grammarAccess.getExpressionAccess().getAlternatives_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_2__1__Impl
	rule__Expression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCmpAssignment_1_2_1()); }
(rule__Expression__CmpAssignment_1_2_1)
{ after(grammarAccess.getExpressionAccess().getCmpAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprAssignment_1_2_2()); }
(rule__Expression__ExprAssignment_1_2_2)
{ after(grammarAccess.getExpressionAccess().getExprAssignment_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_3__0__Impl
	rule__Expression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives_1_3_0()); }
(rule__Expression__Alternatives_1_3_0)
{ after(grammarAccess.getExpressionAccess().getAlternatives_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_3__1__Impl
	rule__Expression__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprAssignment_1_3_1()); }
(rule__Expression__ExprAssignment_1_3_1)
{ after(grammarAccess.getExpressionAccess().getExprAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1_3_2()); }
(rule__Expression__Group_1_3_2__0)?
{ after(grammarAccess.getExpressionAccess().getGroup_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_1_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_3_2__0__Impl
	rule__Expression__Group_1_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getElseKeyword_1_3_2_0()); }

	'else' 

{ after(grammarAccess.getExpressionAccess().getElseKeyword_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprAssignment_1_3_2_1()); }
(rule__Expression__ExprAssignment_1_3_2_1)
{ after(grammarAccess.getExpressionAccess().getExprAssignment_1_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_4__0__Impl
	rule__Expression__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftAssignment_1_4_0()); }
(rule__Expression__LeftAssignment_1_4_0)
{ after(grammarAccess.getExpressionAccess().getLeftAssignment_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_4__1__Impl
	rule__Expression__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1_4_1()); }
(rule__Expression__Group_1_4_1__0)?
{ after(grammarAccess.getExpressionAccess().getGroup_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_4_2()); }
(rule__Expression__RightAssignment_1_4_2)
{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Expression__Group_1_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_4_1__0__Impl
	rule__Expression__Group_1_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprAssignment_1_4_1_0()); }
(rule__Expression__ExprAssignment_1_4_1_0)
{ after(grammarAccess.getExpressionAccess().getExprAssignment_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1_4_1_1()); }
(rule__Expression__Group_1_4_1_1__0)*
{ after(grammarAccess.getExpressionAccess().getGroup_1_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_4_1_1__0__Impl
	rule__Expression__Group_1_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCommaAssignment_1_4_1_1_0()); }
(rule__Expression__CommaAssignment_1_4_1_1_0)
{ after(grammarAccess.getExpressionAccess().getCommaAssignment_1_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprAssignment_1_4_1_1_1()); }
(rule__Expression__ExprAssignment_1_4_1_1_1)
{ after(grammarAccess.getExpressionAccess().getExprAssignment_1_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__0__Impl
	rule__TerminalExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__1__Impl
	rule__TerminalExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getLetAssignment_0_1()); }
(rule__TerminalExpression__LetAssignment_0_1)
{ after(grammarAccess.getTerminalExpressionAccess().getLetAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__2__Impl
	rule__TerminalExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getLetdeclAssignment_0_2()); }
(rule__TerminalExpression__LetdeclAssignment_0_2)
{ after(grammarAccess.getTerminalExpressionAccess().getLetdeclAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__3__Impl
	rule__TerminalExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_0_3()); }
(rule__TerminalExpression__Group_0_3__0)*
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBlockOrBarAssignment_0_4()); }
(rule__TerminalExpression__BlockOrBarAssignment_0_4)
{ after(grammarAccess.getTerminalExpressionAccess().getBlockOrBarAssignment_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TerminalExpression__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0_3__0__Impl
	rule__TerminalExpression__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getCommaAssignment_0_3_0()); }
(rule__TerminalExpression__CommaAssignment_0_3_0)
{ after(grammarAccess.getTerminalExpressionAccess().getCommaAssignment_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getLetdeclAssignment_0_3_1()); }
(rule__TerminalExpression__LetdeclAssignment_0_3_1)
{ after(grammarAccess.getTerminalExpressionAccess().getLetdeclAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__0__Impl
	rule__TerminalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__1__Impl
	rule__TerminalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getQuantAssignment_1_1()); }
(rule__TerminalExpression__QuantAssignment_1_1)
{ after(grammarAccess.getTerminalExpressionAccess().getQuantAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__2__Impl
	rule__TerminalExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDeclAssignment_1_2()); }
(rule__TerminalExpression__DeclAssignment_1_2)
{ after(grammarAccess.getTerminalExpressionAccess().getDeclAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__3__Impl
	rule__TerminalExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_1_3()); }
(rule__TerminalExpression__Group_1_3__0)*
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBlockOrBarAssignment_1_4()); }
(rule__TerminalExpression__BlockOrBarAssignment_1_4)
{ after(grammarAccess.getTerminalExpressionAccess().getBlockOrBarAssignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TerminalExpression__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1_3__0__Impl
	rule__TerminalExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getCommaAssignment_1_3_0()); }
(rule__TerminalExpression__CommaAssignment_1_3_0)
{ after(grammarAccess.getTerminalExpressionAccess().getCommaAssignment_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDeclAssignment_1_3_1()); }
(rule__TerminalExpression__DeclAssignment_1_3_1)
{ after(grammarAccess.getTerminalExpressionAccess().getDeclAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__0__Impl
	rule__TerminalExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_2_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__1__Impl
	rule__TerminalExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getUnOpAssignment_2_1()); }
(rule__TerminalExpression__UnOpAssignment_2_1)
{ after(grammarAccess.getTerminalExpressionAccess().getUnOpAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExprAssignment_2_2()); }
(rule__TerminalExpression__ExprAssignment_2_2)
{ after(grammarAccess.getTerminalExpressionAccess().getExprAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__0__Impl
	rule__TerminalExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_3_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__1__Impl
	rule__TerminalExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getCommonAssignment_3_1()); }
(rule__TerminalExpression__CommonAssignment_3_1)
{ after(grammarAccess.getTerminalExpressionAccess().getCommonAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives_3_2()); }
(rule__TerminalExpression__Alternatives_3_2)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpression__Group_3_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3_2_0__0__Impl
	rule__TerminalExpression__Group_3_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDeclAssignment_3_2_0_0()); }
(rule__TerminalExpression__DeclAssignment_3_2_0_0)
{ after(grammarAccess.getTerminalExpressionAccess().getDeclAssignment_3_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3_2_0__1__Impl
	rule__TerminalExpression__Group_3_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_3_2_0_1()); }
(rule__TerminalExpression__Group_3_2_0_1__0)*
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_3_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBlockOrBarAssignment_3_2_0_2()); }
(rule__TerminalExpression__BlockOrBarAssignment_3_2_0_2)
{ after(grammarAccess.getTerminalExpressionAccess().getBlockOrBarAssignment_3_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpression__Group_3_2_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3_2_0_1__0__Impl
	rule__TerminalExpression__Group_3_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3_2_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getCommaAssignment_3_2_0_1_0()); }
(rule__TerminalExpression__CommaAssignment_3_2_0_1_0)
{ after(grammarAccess.getTerminalExpressionAccess().getCommaAssignment_3_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_3_2_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_3_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_3_2_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDeclAssignment_3_2_0_1_1()); }
(rule__TerminalExpression__DeclAssignment_3_2_0_1_1)
{ after(grammarAccess.getTerminalExpressionAccess().getDeclAssignment_3_2_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__0__Impl
	rule__TerminalExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_4_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getINTTerminalRuleCall_4_1()); }
	RULE_INT
{ after(grammarAccess.getTerminalExpressionAccess().getINTTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_5__0__Impl
	rule__TerminalExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_5_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getNEGATIVE_INTEGERTerminalRuleCall_5_1()); }
	RULE_NEGATIVE_INTEGER
{ after(grammarAccess.getTerminalExpressionAccess().getNEGATIVE_INTEGERTerminalRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_6__0__Impl
	rule__TerminalExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_6_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getNoneAssignment_6_1()); }
(rule__TerminalExpression__NoneAssignment_6_1)
{ after(grammarAccess.getTerminalExpressionAccess().getNoneAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_7__0__Impl
	rule__TerminalExpression__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_7_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getIdenAssignment_7_1()); }
(rule__TerminalExpression__IdenAssignment_7_1)
{ after(grammarAccess.getTerminalExpressionAccess().getIdenAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_8__0__Impl
	rule__TerminalExpression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_8_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getUnivAssignment_8_1()); }
(rule__TerminalExpression__UnivAssignment_8_1)
{ after(grammarAccess.getTerminalExpressionAccess().getUnivAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_9__0__Impl
	rule__TerminalExpression__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_9_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getIntAssignment_9_1()); }
(rule__TerminalExpression__IntAssignment_9_1)
{ after(grammarAccess.getTerminalExpressionAccess().getIntAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_10__0__Impl
	rule__TerminalExpression__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_10_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getSeqAssignment_10_1()); }
(rule__TerminalExpression__SeqAssignment_10_1)
{ after(grammarAccess.getTerminalExpressionAccess().getSeqAssignment_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_11__0__Impl
	rule__TerminalExpression__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_11_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_11__1__Impl
	rule__TerminalExpression__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getParOAssignment_11_1()); }
(rule__TerminalExpression__ParOAssignment_11_1)
{ after(grammarAccess.getTerminalExpressionAccess().getParOAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_11__2__Impl
	rule__TerminalExpression__Group_11__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExprAssignment_11_2()); }
(rule__TerminalExpression__ExprAssignment_11_2)
{ after(grammarAccess.getTerminalExpressionAccess().getExprAssignment_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_11__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_11__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_11__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getParFAssignment_11_3()); }
(rule__TerminalExpression__ParFAssignment_11_3)
{ after(grammarAccess.getTerminalExpressionAccess().getParFAssignment_11_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TerminalExpression__Group_12__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_12__0__Impl
	rule__TerminalExpression__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_12__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_12_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_12__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_12__1__Impl
	rule__TerminalExpression__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_12__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getCommercialAtKeyword_12_1()); }
(
	'@' 
)?
{ after(grammarAccess.getTerminalExpressionAccess().getCommercialAtKeyword_12_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_12__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_12__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_12__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getAlternatives_12_2()); }
(rule__TerminalExpression__Alternatives_12_2)
{ after(grammarAccess.getTerminalExpressionAccess().getAlternatives_12_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TerminalExpression__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_13__0__Impl
	rule__TerminalExpression__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_13_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBlockAssignment_13_1()); }
(rule__TerminalExpression__BlockAssignment_13_1)
{ after(grammarAccess.getTerminalExpressionAccess().getBlockAssignment_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TerminalExpression__Group_14__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_14__0__Impl
	rule__TerminalExpression__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_14__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExpressionAction_14_0()); }
(

)
{ after(grammarAccess.getTerminalExpressionAccess().getExpressionAction_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_14__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_14__1__Impl
	rule__TerminalExpression__Group_14__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_14__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getLeftCurlyBracketAssignment_14_1()); }
(rule__TerminalExpression__LeftCurlyBracketAssignment_14_1)
{ after(grammarAccess.getTerminalExpressionAccess().getLeftCurlyBracketAssignment_14_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_14__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_14__2__Impl
	rule__TerminalExpression__Group_14__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_14__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDeclAssignment_14_2()); }
(rule__TerminalExpression__DeclAssignment_14_2)
{ after(grammarAccess.getTerminalExpressionAccess().getDeclAssignment_14_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_14__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_14__3__Impl
	rule__TerminalExpression__Group_14__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_14__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getGroup_14_3()); }
(rule__TerminalExpression__Group_14_3__0)*
{ after(grammarAccess.getTerminalExpressionAccess().getGroup_14_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_14__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_14__4__Impl
	rule__TerminalExpression__Group_14__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_14__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBlockOrBarAssignment_14_4()); }
(rule__TerminalExpression__BlockOrBarAssignment_14_4)
{ after(grammarAccess.getTerminalExpressionAccess().getBlockOrBarAssignment_14_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_14__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_14__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_14__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getRightCurlyBracketAssignment_14_5()); }
(rule__TerminalExpression__RightCurlyBracketAssignment_14_5)
{ after(grammarAccess.getTerminalExpressionAccess().getRightCurlyBracketAssignment_14_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TerminalExpression__Group_14_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_14_3__0__Impl
	rule__TerminalExpression__Group_14_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_14_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getCommaAssignment_14_3_0()); }
(rule__TerminalExpression__CommaAssignment_14_3_0)
{ after(grammarAccess.getTerminalExpressionAccess().getCommaAssignment_14_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TerminalExpression__Group_14_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TerminalExpression__Group_14_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__Group_14_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDeclAssignment_14_3_1()); }
(rule__TerminalExpression__DeclAssignment_14_3_1)
{ after(grammarAccess.getTerminalExpressionAccess().getDeclAssignment_14_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Decl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decl__Group__0__Impl
	rule__Decl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getPrivateKeyword_0()); }
(
	'private' 
)?
{ after(grammarAccess.getDeclAccess().getPrivateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decl__Group__1__Impl
	rule__Decl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getDisjKeyword_1()); }
(
	'disj' 
)?
{ after(grammarAccess.getDeclAccess().getDisjKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decl__Group__2__Impl
	rule__Decl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getPropertyNameAssignment_2()); }
(rule__Decl__PropertyNameAssignment_2)
{ after(grammarAccess.getDeclAccess().getPropertyNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decl__Group__3__Impl
	rule__Decl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getGroup_3()); }
(rule__Decl__Group_3__0)*
{ after(grammarAccess.getDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decl__Group__4__Impl
	rule__Decl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getColonAssignment_4()); }
(rule__Decl__ColonAssignment_4)
{ after(grammarAccess.getDeclAccess().getColonAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decl__Group__5__Impl
	rule__Decl__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getDisjKeyword_5()); }
(
	'disj' 
)?
{ after(grammarAccess.getDeclAccess().getDisjKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decl__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decl__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getExprAssignment_6()); }
(rule__Decl__ExprAssignment_6)
{ after(grammarAccess.getDeclAccess().getExprAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Decl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decl__Group_3__0__Impl
	rule__Decl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getCommaAssignment_3_0()); }
(rule__Decl__CommaAssignment_3_0)
{ after(grammarAccess.getDeclAccess().getCommaAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Decl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Decl__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getPropertyNameAssignment_3_1()); }
(rule__Decl__PropertyNameAssignment_3_1)
{ after(grammarAccess.getDeclAccess().getPropertyNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetDecl__Group__0__Impl
	rule__LetDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetDeclAccess().getNameExpressionAssignment_0()); }
(rule__LetDecl__NameExpressionAssignment_0)
{ after(grammarAccess.getLetDeclAccess().getNameExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetDecl__Group__1__Impl
	rule__LetDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetDeclAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getLetDeclAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetDeclAccess().getExprAssignment_2()); }
(rule__LetDecl__ExprAssignment_2)
{ after(grammarAccess.getLetDeclAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BinOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinOp__Group__0__Impl
	rule__BinOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinOpAccess().getBinOpAction_0()); }
(

)
{ after(grammarAccess.getBinOpAccess().getBinOpAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinOpAccess().getAlternatives_1()); }
(rule__BinOp__Alternatives_1)
{ after(grammarAccess.getBinOpAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnOp__Group__0__Impl
	rule__UnOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnOpAccess().getUnOpAction_0()); }
(

)
{ after(grammarAccess.getUnOpAccess().getUnOpAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnOpAccess().getAlternatives_1()); }
(rule__UnOp__Alternatives_1)
{ after(grammarAccess.getUnOpAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CommonQuantUnOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommonQuantUnOp__Group__0__Impl
	rule__CommonQuantUnOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommonQuantUnOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommonQuantUnOpAccess().getCommonQuantUnOpAction_0()); }
(

)
{ after(grammarAccess.getCommonQuantUnOpAccess().getCommonQuantUnOpAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CommonQuantUnOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CommonQuantUnOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommonQuantUnOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommonQuantUnOpAccess().getAlternatives_1()); }
(rule__CommonQuantUnOp__Alternatives_1)
{ after(grammarAccess.getCommonQuantUnOpAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrowOp__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrowOp__Group__0__Impl
	rule__ArrowOp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrowOp__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowOpAccess().getAlternatives_0()); }
(rule__ArrowOp__Alternatives_0)?
{ after(grammarAccess.getArrowOpAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrowOp__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrowOp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrowOp__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowOpAccess().getArrowAssignment_1()); }
(rule__ArrowOp__ArrowAssignment_1)
{ after(grammarAccess.getArrowOpAccess().getArrowAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCAssignment_0()); }
(rule__Block__LeftCAssignment_0)
{ after(grammarAccess.getBlockAccess().getLeftCAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getExprAssignment_1()); }
(rule__Block__ExprAssignment_1)*
{ after(grammarAccess.getBlockAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCAssignment_2()); }
(rule__Block__RightCAssignment_2)
{ after(grammarAccess.getBlockAccess().getRightCAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BlockOrBar__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockOrBar__Group_1__0__Impl
	rule__BlockOrBar__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockOrBar__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockOrBarAccess().getVerticalLineKeyword_1_0()); }

	'|' 

{ after(grammarAccess.getBlockOrBarAccess().getVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BlockOrBar__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BlockOrBar__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockOrBar__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockOrBarAccess().getExprAssignment_1_1()); }
(rule__BlockOrBar__ExprAssignment_1_1)
{ after(grammarAccess.getBlockOrBarAccess().getExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OpenName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenName__Group__0__Impl
	rule__OpenName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenNameAccess().getOpenKeyword_0()); }

	'open' 

{ after(grammarAccess.getOpenNameAccess().getOpenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OpenName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OpenName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenNameAccess().getImportURIAssignment_1()); }
(rule__OpenName__ImportURIAssignment_1)
{ after(grammarAccess.getOpenNameAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FactName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FactName__Group__0__Impl
	rule__FactName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FactName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactNameAccess().getFactNameAction_0()); }
(

)
{ after(grammarAccess.getFactNameAccess().getFactNameAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FactName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FactName__Group__1__Impl
	rule__FactName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FactName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactNameAccess().getFactKeyword_1()); }

	'fact' 

{ after(grammarAccess.getFactNameAccess().getFactKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FactName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FactName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FactName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactNameAccess().getNameAssignment_2()); }
(rule__FactName__NameAssignment_2)?
{ after(grammarAccess.getFactNameAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AssertionName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertionName__Group__0__Impl
	rule__AssertionName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionNameAccess().getAssertionNameAction_0()); }
(

)
{ after(grammarAccess.getAssertionNameAccess().getAssertionNameAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertionName__Group__1__Impl
	rule__AssertionName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionNameAccess().getAssertKeyword_1()); }

	'assert' 

{ after(grammarAccess.getAssertionNameAccess().getAssertKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertionName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionNameAccess().getNameAssignment_2()); }
(rule__AssertionName__NameAssignment_2)?
{ after(grammarAccess.getAssertionNameAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EnumName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumName__Group__0__Impl
	rule__EnumName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumNameAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumNameAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumNameAccess().getNameAssignment_1()); }
(rule__EnumName__NameAssignment_1)
{ after(grammarAccess.getEnumNameAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetName__Group__0__Impl
	rule__LetName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetNameAccess().getLetKeyword_0()); }

	'let' 

{ after(grammarAccess.getLetNameAccess().getLetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetNameAccess().getNameAssignment_1()); }
(rule__LetName__NameAssignment_1)
{ after(grammarAccess.getLetNameAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameAlias__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameAlias__Group__0__Impl
	rule__NameAlias__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameAlias__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAliasAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getNameAliasAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameAlias__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameAlias__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameAlias__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAliasAccess().getGroup_1()); }
(rule__NameAlias__Group_1__0)*
{ after(grammarAccess.getNameAliasAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NameAlias__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameAlias__Group_1__0__Impl
	rule__NameAlias__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameAlias__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAliasAccess().getSolidusKeyword_1_0()); }

	'/' 

{ after(grammarAccess.getNameAliasAccess().getSolidusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameAlias__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameAlias__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameAlias__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAliasAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getNameAliasAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Name__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group__0__Impl
	rule__Name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getAlternatives_0()); }
(rule__Name__Alternatives_0)
{ after(grammarAccess.getNameAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getGroup_1()); }
(rule__Name__Group_1__0)*
{ after(grammarAccess.getNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Name__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group_1__0__Impl
	rule__Name__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getSolidusKeyword_1_0()); }

	'/' 

{ after(grammarAccess.getNameAccess().getSolidusKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Name__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferencesSig__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferencesSig__Group__0__Impl
	rule__ReferencesSig__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencesSig__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencesSigAccess().getReferencesSigAction_0()); }
(

)
{ after(grammarAccess.getReferencesSigAccess().getReferencesSigAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferencesSig__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferencesSig__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencesSig__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencesSigAccess().getAlternatives_1()); }
(rule__ReferencesSig__Alternatives_1)
{ after(grammarAccess.getReferencesSigAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ref__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ref__Group__0__Impl
	rule__Ref__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getRefAction_0()); }
(

)
{ after(grammarAccess.getRefAccess().getRefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ref__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ref__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getAlternatives_1()); }
(rule__Ref__Alternatives_1)
{ after(grammarAccess.getRefAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Specification__ModuleAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getModuleModuleParserRuleCall_0_0()); }
	ruleModule{ after(grammarAccess.getSpecificationAccess().getModuleModuleParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__OpenAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getOpenOpenParserRuleCall_1_0()); }
	ruleOpen{ after(grammarAccess.getSpecificationAccess().getOpenOpenParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Specification__ParagraphAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecificationAccess().getParagraphParagraphParserRuleCall_2_0()); }
	ruleParagraph{ after(grammarAccess.getSpecificationAccess().getParagraphParagraphParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ModuleNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getModuleAccess().getModuleNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__LeftAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getLeftLeftSquareBracketKeywordParserRuleCall_2_0_0()); }
	ruleLeftSquareBracketKeyword{ after(grammarAccess.getModuleAccess().getLeftLeftSquareBracketKeywordParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ExactlyAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getExactlyExactlyKeyword_2_1_0()); }
(
{ before(grammarAccess.getModuleAccess().getExactlyExactlyKeyword_2_1_0()); }

	'exactly' 

{ after(grammarAccess.getModuleAccess().getExactlyExactlyKeyword_2_1_0()); }
)

{ after(grammarAccess.getModuleAccess().getExactlyExactlyKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NameAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameExactlyNameParserRuleCall_2_2_0()); }
	ruleExactlyName{ after(grammarAccess.getModuleAccess().getNameExactlyNameParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__CommaAssignment_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getCommaCommaParserRuleCall_2_3_0_0()); }
	ruleComma{ after(grammarAccess.getModuleAccess().getCommaCommaParserRuleCall_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ExactlyAssignment_2_3_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getExactlyExactlyKeyword_2_3_1_0_0_0()); }
(
{ before(grammarAccess.getModuleAccess().getExactlyExactlyKeyword_2_3_1_0_0_0()); }

	'exactly' 

{ after(grammarAccess.getModuleAccess().getExactlyExactlyKeyword_2_3_1_0_0_0()); }
)

{ after(grammarAccess.getModuleAccess().getExactlyExactlyKeyword_2_3_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NumberAssignment_2_3_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNumberINTTerminalRuleCall_2_3_1_0_1_0()); }
	RULE_INT{ after(grammarAccess.getModuleAccess().getNumberINTTerminalRuleCall_2_3_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NameAssignment_2_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameExactlyNameParserRuleCall_2_3_1_1_0()); }
	ruleExactlyName{ after(grammarAccess.getModuleAccess().getNameExactlyNameParserRuleCall_2_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__RightAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getRightRightSquareBracketKeywordParserRuleCall_2_4_0()); }
	ruleRightSquareBracketKeyword{ after(grammarAccess.getModuleAccess().getRightRightSquareBracketKeywordParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Open__OpenNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getOpenNameOpenNameParserRuleCall_1_0()); }
	ruleOpenName{ after(grammarAccess.getOpenAccess().getOpenNameOpenNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Open__LeftAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getLeftLeftSquareBracketKeywordParserRuleCall_2_0_0()); }
	ruleLeftSquareBracketKeyword{ after(grammarAccess.getOpenAccess().getLeftLeftSquareBracketKeywordParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Open__RefAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getRefRefParserRuleCall_2_1_0()); }
	ruleRef{ after(grammarAccess.getOpenAccess().getRefRefParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Open__CommaAssignment_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getCommaCommaParserRuleCall_2_2_0_0()); }
	ruleComma{ after(grammarAccess.getOpenAccess().getCommaCommaParserRuleCall_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Open__RefAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getRefRefParserRuleCall_2_2_1_0()); }
	ruleRef{ after(grammarAccess.getOpenAccess().getRefRefParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Open__RightAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getRightRightSquareBracketKeywordParserRuleCall_2_3_0()); }
	ruleRightSquareBracketKeyword{ after(grammarAccess.getOpenAccess().getRightRightSquareBracketKeywordParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Open__NameAsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenAccess().getNameAsAsNameParserRuleCall_3_1_0()); }
	ruleAsName{ after(grammarAccess.getOpenAccess().getNameAsAsNameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FactDecl__FactNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactDeclAccess().getFactNameFactNameParserRuleCall_0_0()); }
	ruleFactName{ after(grammarAccess.getFactDeclAccess().getFactNameFactNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FactDecl__BlockAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactDeclAccess().getBlockBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getFactDeclAccess().getBlockBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertDecl__AssertionNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertDeclAccess().getAssertionNameAssertionNameParserRuleCall_0_0()); }
	ruleAssertionName{ after(grammarAccess.getAssertDeclAccess().getAssertionNameAssertionNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertDecl__BlockAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertDeclAccess().getBlockBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getAssertDeclAccess().getBlockBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__RefAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getRefRefParserRuleCall_2_0_0()); }
	ruleRef{ after(grammarAccess.getFunDeclAccess().getRefRefParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__DotAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getDotDotParserRuleCall_2_1_0()); }
	ruleDot{ after(grammarAccess.getFunDeclAccess().getDotDotParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__FunctionNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getFunctionNameFunctionNameParserRuleCall_3_0()); }
	ruleFunctionName{ after(grammarAccess.getFunDeclAccess().getFunctionNameFunctionNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__LeftSAssignment_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getLeftSLeftSquareBracketKeywordParserRuleCall_4_0_0_0()); }
	ruleLeftSquareBracketKeyword{ after(grammarAccess.getFunDeclAccess().getLeftSLeftSquareBracketKeywordParserRuleCall_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__DeclAssignment_4_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getDeclDeclParserRuleCall_4_0_1_0_0()); }
	ruleDecl{ after(grammarAccess.getFunDeclAccess().getDeclDeclParserRuleCall_4_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__CommaAssignment_4_0_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getCommaCommaParserRuleCall_4_0_1_1_0_0()); }
	ruleComma{ after(grammarAccess.getFunDeclAccess().getCommaCommaParserRuleCall_4_0_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__DeclAssignment_4_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getDeclDeclParserRuleCall_4_0_1_1_1_0()); }
	ruleDecl{ after(grammarAccess.getFunDeclAccess().getDeclDeclParserRuleCall_4_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__RightSAssignment_4_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getRightSRightSquareBracketKeywordParserRuleCall_4_0_2_0()); }
	ruleRightSquareBracketKeyword{ after(grammarAccess.getFunDeclAccess().getRightSRightSquareBracketKeywordParserRuleCall_4_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__LeftPAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getLeftPLeftParenthesisParserRuleCall_4_1_0_0()); }
	ruleLeftParenthesis{ after(grammarAccess.getFunDeclAccess().getLeftPLeftParenthesisParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__DeclAssignment_4_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getDeclDeclParserRuleCall_4_1_1_0_0()); }
	ruleDecl{ after(grammarAccess.getFunDeclAccess().getDeclDeclParserRuleCall_4_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__CommaAssignment_4_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getCommaCommaParserRuleCall_4_1_1_1_0_0()); }
	ruleComma{ after(grammarAccess.getFunDeclAccess().getCommaCommaParserRuleCall_4_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__DeclAssignment_4_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getDeclDeclParserRuleCall_4_1_1_1_1_0()); }
	ruleDecl{ after(grammarAccess.getFunDeclAccess().getDeclDeclParserRuleCall_4_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__RightPAssignment_4_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getRightPRightParenthesisParserRuleCall_4_1_2_0()); }
	ruleRightParenthesis{ after(grammarAccess.getFunDeclAccess().getRightPRightParenthesisParserRuleCall_4_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__ColonAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getColonColonParserRuleCall_5_0()); }
	ruleColon{ after(grammarAccess.getFunDeclAccess().getColonColonParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__ExprAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getExprExpressionParserRuleCall_6_0()); }
	ruleExpression{ after(grammarAccess.getFunDeclAccess().getExprExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunDecl__BlockAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunDeclAccess().getBlockBlockParserRuleCall_7_0()); }
	ruleBlock{ after(grammarAccess.getFunDeclAccess().getBlockBlockParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__RefAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getRefRefParserRuleCall_2_0_0()); }
	ruleRef{ after(grammarAccess.getPredDeclAccess().getRefRefParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__DotAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getDotDotParserRuleCall_2_1_0()); }
	ruleDot{ after(grammarAccess.getPredDeclAccess().getDotDotParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__PredicateNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getPredicateNamePredicateNameParserRuleCall_3_0()); }
	rulePredicateName{ after(grammarAccess.getPredDeclAccess().getPredicateNamePredicateNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__LeftSAssignment_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getLeftSLeftSquareBracketKeywordParserRuleCall_4_0_0_0()); }
	ruleLeftSquareBracketKeyword{ after(grammarAccess.getPredDeclAccess().getLeftSLeftSquareBracketKeywordParserRuleCall_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__DeclAssignment_4_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getDeclDeclParserRuleCall_4_0_1_0_0()); }
	ruleDecl{ after(grammarAccess.getPredDeclAccess().getDeclDeclParserRuleCall_4_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__CommaAssignment_4_0_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getCommaCommaParserRuleCall_4_0_1_1_0_0()); }
	ruleComma{ after(grammarAccess.getPredDeclAccess().getCommaCommaParserRuleCall_4_0_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__DeclAssignment_4_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getDeclDeclParserRuleCall_4_0_1_1_1_0()); }
	ruleDecl{ after(grammarAccess.getPredDeclAccess().getDeclDeclParserRuleCall_4_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__RightSAssignment_4_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getRightSRightSquareBracketKeywordParserRuleCall_4_0_2_0()); }
	ruleRightSquareBracketKeyword{ after(grammarAccess.getPredDeclAccess().getRightSRightSquareBracketKeywordParserRuleCall_4_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__LeftPAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getLeftPLeftParenthesisParserRuleCall_4_1_0_0()); }
	ruleLeftParenthesis{ after(grammarAccess.getPredDeclAccess().getLeftPLeftParenthesisParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__DeclAssignment_4_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getDeclDeclParserRuleCall_4_1_1_0_0()); }
	ruleDecl{ after(grammarAccess.getPredDeclAccess().getDeclDeclParserRuleCall_4_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__CommaAssignment_4_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getCommaCommaParserRuleCall_4_1_1_1_0_0()); }
	ruleComma{ after(grammarAccess.getPredDeclAccess().getCommaCommaParserRuleCall_4_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__DeclAssignment_4_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getDeclDeclParserRuleCall_4_1_1_1_1_0()); }
	ruleDecl{ after(grammarAccess.getPredDeclAccess().getDeclDeclParserRuleCall_4_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__RightPAssignment_4_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getRightPRightParenthesisParserRuleCall_4_1_2_0()); }
	ruleRightParenthesis{ after(grammarAccess.getPredDeclAccess().getRightPRightParenthesisParserRuleCall_4_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredDecl__BlockAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredDeclAccess().getBlockBlockParserRuleCall_5_0()); }
	ruleBlock{ after(grammarAccess.getPredDeclAccess().getBlockBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RunDecl__RunNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunDeclAccess().getRunNameAliasParserRuleCall_0_0_0()); }
	ruleAlias{ after(grammarAccess.getRunDeclAccess().getRunNameAliasParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RunDecl__Name2Assignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunDeclAccess().getName2PredicateNameCrossReference_2_0_0()); }
(
{ before(grammarAccess.getRunDeclAccess().getName2PredicateNameIDTerminalRuleCall_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRunDeclAccess().getName2PredicateNameIDTerminalRuleCall_2_0_0_1()); }
)
{ after(grammarAccess.getRunDeclAccess().getName2PredicateNameCrossReference_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RunDecl__BlockAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunDeclAccess().getBlockBlockParserRuleCall_2_1_0()); }
	ruleBlock{ after(grammarAccess.getRunDeclAccess().getBlockBlockParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RunDecl__ScopeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunDeclAccess().getScopeScopeParserRuleCall_3_0()); }
	ruleScope{ after(grammarAccess.getRunDeclAccess().getScopeScopeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDecl__CheckNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckDeclAccess().getCheckNameAliasParserRuleCall_0_0_0()); }
	ruleAlias{ after(grammarAccess.getCheckDeclAccess().getCheckNameAliasParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDecl__NameAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckDeclAccess().getNameAssertionNameCrossReference_2_0_0()); }
(
{ before(grammarAccess.getCheckDeclAccess().getNameAssertionNameIDTerminalRuleCall_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getCheckDeclAccess().getNameAssertionNameIDTerminalRuleCall_2_0_0_1()); }
)
{ after(grammarAccess.getCheckDeclAccess().getNameAssertionNameCrossReference_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDecl__BlockAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckDeclAccess().getBlockBlockParserRuleCall_2_1_0()); }
	ruleBlock{ after(grammarAccess.getCheckDeclAccess().getBlockBlockParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CheckDecl__ScopeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCheckDeclAccess().getScopeScopeParserRuleCall_3_0()); }
	ruleScope{ after(grammarAccess.getCheckDeclAccess().getScopeScopeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__ExpectAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getExpectExpectationParserRuleCall_0_3_0()); }
	ruleExpectation{ after(grammarAccess.getScopeAccess().getExpectExpectationParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__TypescopeAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getTypescopeTypescopeParserRuleCall_1_4_0()); }
	ruleTypescope{ after(grammarAccess.getScopeAccess().getTypescopeTypescopeParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__CommaAssignment_1_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getCommaCommaParserRuleCall_1_5_0_0()); }
	ruleComma{ after(grammarAccess.getScopeAccess().getCommaCommaParserRuleCall_1_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__TypescopeAssignment_1_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getTypescopeTypescopeParserRuleCall_1_5_1_0()); }
	ruleTypescope{ after(grammarAccess.getScopeAccess().getTypescopeTypescopeParserRuleCall_1_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__ExpectAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getExpectExpectationParserRuleCall_1_6_0()); }
	ruleExpectation{ after(grammarAccess.getScopeAccess().getExpectExpectationParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__TypescopeAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getTypescopeTypescopeParserRuleCall_2_2_0()); }
	ruleTypescope{ after(grammarAccess.getScopeAccess().getTypescopeTypescopeParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__CommaAssignment_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getCommaCommaParserRuleCall_2_3_0_0()); }
	ruleComma{ after(grammarAccess.getScopeAccess().getCommaCommaParserRuleCall_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__TypescopeAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getTypescopeTypescopeParserRuleCall_2_3_1_0()); }
	ruleTypescope{ after(grammarAccess.getScopeAccess().getTypescopeTypescopeParserRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__ExpectAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getExpectExpectationParserRuleCall_2_4_0()); }
	ruleExpectation{ after(grammarAccess.getScopeAccess().getExpectExpectationParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__ExpectAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeAccess().getExpectExpectationParserRuleCall_3_1_0()); }
	ruleExpectation{ after(grammarAccess.getScopeAccess().getExpectExpectationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expectation__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpectationAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getExpectationAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Typescope__NameAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypescopeAccess().getNameReferencesNameCrossReference_3_0_0()); }
(
{ before(grammarAccess.getTypescopeAccess().getNameReferencesNameIDTerminalRuleCall_3_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTypescopeAccess().getNameReferencesNameIDTerminalRuleCall_3_0_0_1()); }
)
{ after(grammarAccess.getTypescopeAccess().getNameReferencesNameCrossReference_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__EnumNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclAccess().getEnumNameEnumNameParserRuleCall_0_0()); }
	ruleEnumName{ after(grammarAccess.getEnumDeclAccess().getEnumNameEnumNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__LeftCAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclAccess().getLeftCLeftCurlyBracketParserRuleCall_1_0()); }
	ruleLeftCurlyBracket{ after(grammarAccess.getEnumDeclAccess().getLeftCLeftCurlyBracketParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__PropertyEnumAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclAccess().getPropertyEnumEnumPropertyNameParserRuleCall_2_0()); }
	ruleEnumPropertyName{ after(grammarAccess.getEnumDeclAccess().getPropertyEnumEnumPropertyNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__CommaAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclAccess().getCommaCommaParserRuleCall_3_0_0()); }
	ruleComma{ after(grammarAccess.getEnumDeclAccess().getCommaCommaParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__PropertyEnumAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclAccess().getPropertyEnumEnumPropertyNameParserRuleCall_3_1_0()); }
	ruleEnumPropertyName{ after(grammarAccess.getEnumDeclAccess().getPropertyEnumEnumPropertyNameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDecl__RightCAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumDeclAccess().getRightCRightCurlyBracketParserRuleCall_4_0()); }
	ruleRightCurlyBracket{ after(grammarAccess.getEnumDeclAccess().getRightCRightCurlyBracketParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__LetNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getLetNameLetNameParserRuleCall_0_0()); }
	ruleLetName{ after(grammarAccess.getLetOutDeclAccess().getLetNameLetNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__LeftSAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getLeftSLeftSquareBracketKeywordParserRuleCall_1_0_0()); }
	ruleLeftSquareBracketKeyword{ after(grammarAccess.getLetOutDeclAccess().getLeftSLeftSquareBracketKeywordParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__NameRefAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getNameRefReferencesNameParserRuleCall_1_1_0_0()); }
	ruleReferencesName{ after(grammarAccess.getLetOutDeclAccess().getNameRefReferencesNameParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__CommaAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getCommaCommaParserRuleCall_1_1_1_0_0()); }
	ruleComma{ after(grammarAccess.getLetOutDeclAccess().getCommaCommaParserRuleCall_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__NameRefAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getNameRefReferencesNameParserRuleCall_1_1_1_1_0()); }
	ruleReferencesName{ after(grammarAccess.getLetOutDeclAccess().getNameRefReferencesNameParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__RightSAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getRightSRightSquareBracketKeywordParserRuleCall_1_2_0()); }
	ruleRightSquareBracketKeyword{ after(grammarAccess.getLetOutDeclAccess().getRightSRightSquareBracketKeywordParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__BlockAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getBlockBlockParserRuleCall_2_0_0()); }
	ruleBlock{ after(grammarAccess.getLetOutDeclAccess().getBlockBlockParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetOutDecl__ExprNameAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetOutDeclAccess().getExprNameExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getLetOutDeclAccess().getExprNameExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__SignatureNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getSignatureNameSignatureNameParserRuleCall_2_0()); }
	ruleSignatureName{ after(grammarAccess.getSigDeclAccess().getSignatureNameSignatureNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__CommaAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getCommaCommaParserRuleCall_3_0_0()); }
	ruleComma{ after(grammarAccess.getSigDeclAccess().getCommaCommaParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__SignatureNameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getSignatureNameSignatureNameParserRuleCall_3_1_0()); }
	ruleSignatureName{ after(grammarAccess.getSigDeclAccess().getSignatureNameSignatureNameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__SigExtAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getSigExtSigExtParserRuleCall_4_0()); }
	ruleSigExt{ after(grammarAccess.getSigDeclAccess().getSigExtSigExtParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__DeclAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getDeclDeclParserRuleCall_6_0_0()); }
	ruleDecl{ after(grammarAccess.getSigDeclAccess().getDeclDeclParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__Comma2Assignment_6_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getComma2CommaKeyword_6_1_0_0()); }
(
{ before(grammarAccess.getSigDeclAccess().getComma2CommaKeyword_6_1_0_0()); }

	',' 

{ after(grammarAccess.getSigDeclAccess().getComma2CommaKeyword_6_1_0_0()); }
)

{ after(grammarAccess.getSigDeclAccess().getComma2CommaKeyword_6_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__DeclAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getDeclDeclParserRuleCall_6_1_1_0()); }
	ruleDecl{ after(grammarAccess.getSigDeclAccess().getDeclDeclParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigDecl__BlockAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigDeclAccess().getBlockBlockParserRuleCall_8_0()); }
	ruleBlock{ after(grammarAccess.getSigDeclAccess().getBlockBlockParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigQual__SigqAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigQualAccess().getSigqAlternatives_0_0()); }
(rule__SigQual__SigqAlternatives_0_0)
{ after(grammarAccess.getSigQualAccess().getSigqAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigExt__RefAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExtAccess().getRefReferencesSigParserRuleCall_0_1_0()); }
	ruleReferencesSig{ after(grammarAccess.getSigExtAccess().getRefReferencesSigParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigExt__RefAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExtAccess().getRefReferencesSigParserRuleCall_1_1_0()); }
	ruleReferencesSig{ after(grammarAccess.getSigExtAccess().getRefReferencesSigParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigExt__Ref2Assignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExtAccess().getRef2ReferencesSigParserRuleCall_1_2_1_0()); }
	ruleReferencesSig{ after(grammarAccess.getSigExtAccess().getRef2ReferencesSigParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__BinOpAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBinOpBinOpParserRuleCall_1_0_0_0()); }
	ruleBinOp{ after(grammarAccess.getExpressionAccess().getBinOpBinOpParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExprAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_0_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ArrowOpAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getArrowOpArrowOpParserRuleCall_1_1_0_0()); }
	ruleArrowOp{ after(grammarAccess.getExpressionAccess().getArrowOpArrowOpParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExprAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__CmpAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCmpCompareOpParserRuleCall_1_2_1_0()); }
	ruleCompareOp{ after(grammarAccess.getExpressionAccess().getCmpCompareOpParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExprAssignment_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_2_2_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExprAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_3_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExprAssignment_1_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_3_2_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__LeftAssignment_1_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLeftLeftSquareBracketKeywordParserRuleCall_1_4_0_0()); }
	ruleLeftSquareBracketKeyword{ after(grammarAccess.getExpressionAccess().getLeftLeftSquareBracketKeywordParserRuleCall_1_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExprAssignment_1_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_4_1_0_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__CommaAssignment_1_4_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getCommaCommaParserRuleCall_1_4_1_1_0_0()); }
	ruleComma{ after(grammarAccess.getExpressionAccess().getCommaCommaParserRuleCall_1_4_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExprAssignment_1_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_4_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionAccess().getExprExpressionParserRuleCall_1_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightRightSquareBracketKeywordParserRuleCall_1_4_2_0()); }
	ruleRightSquareBracketKeyword{ after(grammarAccess.getExpressionAccess().getRightRightSquareBracketKeywordParserRuleCall_1_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__LetAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getLetLetKeyword_0_1_0()); }
(
{ before(grammarAccess.getTerminalExpressionAccess().getLetLetKeyword_0_1_0()); }

	'let' 

{ after(grammarAccess.getTerminalExpressionAccess().getLetLetKeyword_0_1_0()); }
)

{ after(grammarAccess.getTerminalExpressionAccess().getLetLetKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__LetdeclAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getLetdeclLetDeclParserRuleCall_0_2_0()); }
	ruleLetDecl{ after(grammarAccess.getTerminalExpressionAccess().getLetdeclLetDeclParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__CommaAssignment_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getCommaCommaParserRuleCall_0_3_0_0()); }
	ruleComma{ after(grammarAccess.getTerminalExpressionAccess().getCommaCommaParserRuleCall_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__LetdeclAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getLetdeclLetDeclParserRuleCall_0_3_1_0()); }
	ruleLetDecl{ after(grammarAccess.getTerminalExpressionAccess().getLetdeclLetDeclParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__BlockOrBarAssignment_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBlockOrBarBlockOrBarParserRuleCall_0_4_0()); }
	ruleBlockOrBar{ after(grammarAccess.getTerminalExpressionAccess().getBlockOrBarBlockOrBarParserRuleCall_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__QuantAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getQuantQuantParserRuleCall_1_1_0()); }
	ruleQuant{ after(grammarAccess.getTerminalExpressionAccess().getQuantQuantParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__DeclAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDeclDeclParserRuleCall_1_2_0()); }
	ruleDecl{ after(grammarAccess.getTerminalExpressionAccess().getDeclDeclParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__CommaAssignment_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getCommaCommaParserRuleCall_1_3_0_0()); }
	ruleComma{ after(grammarAccess.getTerminalExpressionAccess().getCommaCommaParserRuleCall_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__DeclAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDeclDeclParserRuleCall_1_3_1_0()); }
	ruleDecl{ after(grammarAccess.getTerminalExpressionAccess().getDeclDeclParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__BlockOrBarAssignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBlockOrBarBlockOrBarParserRuleCall_1_4_0()); }
	ruleBlockOrBar{ after(grammarAccess.getTerminalExpressionAccess().getBlockOrBarBlockOrBarParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__UnOpAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getUnOpUnOpParserRuleCall_2_1_0()); }
	ruleUnOp{ after(grammarAccess.getTerminalExpressionAccess().getUnOpUnOpParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ExprAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExprExpressionParserRuleCall_2_2_0()); }
	ruleExpression{ after(grammarAccess.getTerminalExpressionAccess().getExprExpressionParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__CommonAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getCommonCommonQuantUnOpParserRuleCall_3_1_0()); }
	ruleCommonQuantUnOp{ after(grammarAccess.getTerminalExpressionAccess().getCommonCommonQuantUnOpParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__DeclAssignment_3_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDeclDeclParserRuleCall_3_2_0_0_0()); }
	ruleDecl{ after(grammarAccess.getTerminalExpressionAccess().getDeclDeclParserRuleCall_3_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__CommaAssignment_3_2_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getCommaCommaParserRuleCall_3_2_0_1_0_0()); }
	ruleComma{ after(grammarAccess.getTerminalExpressionAccess().getCommaCommaParserRuleCall_3_2_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__DeclAssignment_3_2_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDeclDeclParserRuleCall_3_2_0_1_1_0()); }
	ruleDecl{ after(grammarAccess.getTerminalExpressionAccess().getDeclDeclParserRuleCall_3_2_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__BlockOrBarAssignment_3_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBlockOrBarBlockOrBarParserRuleCall_3_2_0_2_0()); }
	ruleBlockOrBar{ after(grammarAccess.getTerminalExpressionAccess().getBlockOrBarBlockOrBarParserRuleCall_3_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ExprAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExprExpressionParserRuleCall_3_2_1_0()); }
	ruleExpression{ after(grammarAccess.getTerminalExpressionAccess().getExprExpressionParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__NoneAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getNoneNoneKeyword_6_1_0()); }
(
{ before(grammarAccess.getTerminalExpressionAccess().getNoneNoneKeyword_6_1_0()); }

	'none' 

{ after(grammarAccess.getTerminalExpressionAccess().getNoneNoneKeyword_6_1_0()); }
)

{ after(grammarAccess.getTerminalExpressionAccess().getNoneNoneKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__IdenAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getIdenIdenKeyword_7_1_0()); }
(
{ before(grammarAccess.getTerminalExpressionAccess().getIdenIdenKeyword_7_1_0()); }

	'iden' 

{ after(grammarAccess.getTerminalExpressionAccess().getIdenIdenKeyword_7_1_0()); }
)

{ after(grammarAccess.getTerminalExpressionAccess().getIdenIdenKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__UnivAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getUnivUnivKeyword_8_1_0()); }
(
{ before(grammarAccess.getTerminalExpressionAccess().getUnivUnivKeyword_8_1_0()); }

	'univ' 

{ after(grammarAccess.getTerminalExpressionAccess().getUnivUnivKeyword_8_1_0()); }
)

{ after(grammarAccess.getTerminalExpressionAccess().getUnivUnivKeyword_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__IntAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getIntIntKeyword_9_1_0()); }
(
{ before(grammarAccess.getTerminalExpressionAccess().getIntIntKeyword_9_1_0()); }

	'Int' 

{ after(grammarAccess.getTerminalExpressionAccess().getIntIntKeyword_9_1_0()); }
)

{ after(grammarAccess.getTerminalExpressionAccess().getIntIntKeyword_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__SeqAssignment_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getSeqSeqIntKeyword_10_1_0()); }
(
{ before(grammarAccess.getTerminalExpressionAccess().getSeqSeqIntKeyword_10_1_0()); }

	'seq/Int' 

{ after(grammarAccess.getTerminalExpressionAccess().getSeqSeqIntKeyword_10_1_0()); }
)

{ after(grammarAccess.getTerminalExpressionAccess().getSeqSeqIntKeyword_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ParOAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getParOLeftParenthesisKeyword_11_1_0()); }
(
{ before(grammarAccess.getTerminalExpressionAccess().getParOLeftParenthesisKeyword_11_1_0()); }

	'(' 

{ after(grammarAccess.getTerminalExpressionAccess().getParOLeftParenthesisKeyword_11_1_0()); }
)

{ after(grammarAccess.getTerminalExpressionAccess().getParOLeftParenthesisKeyword_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ExprAssignment_11_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getExprExpressionParserRuleCall_11_2_0()); }
	ruleExpression{ after(grammarAccess.getTerminalExpressionAccess().getExprExpressionParserRuleCall_11_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__ParFAssignment_11_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getParFRightParenthesisKeyword_11_3_0()); }
(
{ before(grammarAccess.getTerminalExpressionAccess().getParFRightParenthesisKeyword_11_3_0()); }

	')' 

{ after(grammarAccess.getTerminalExpressionAccess().getParFRightParenthesisKeyword_11_3_0()); }
)

{ after(grammarAccess.getTerminalExpressionAccess().getParFRightParenthesisKeyword_11_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__NameRefAssignment_12_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getNameRefReferencesNameCrossReference_12_2_0_0()); }
(
{ before(grammarAccess.getTerminalExpressionAccess().getNameRefReferencesNameIDTerminalRuleCall_12_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTerminalExpressionAccess().getNameRefReferencesNameIDTerminalRuleCall_12_2_0_0_1()); }
)
{ after(grammarAccess.getTerminalExpressionAccess().getNameRefReferencesNameCrossReference_12_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__BlockAssignment_13_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBlockBlockParserRuleCall_13_1_0()); }
	ruleBlock{ after(grammarAccess.getTerminalExpressionAccess().getBlockBlockParserRuleCall_13_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__LeftCurlyBracketAssignment_14_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getLeftCurlyBracketLeftCurlyBracketParserRuleCall_14_1_0()); }
	ruleLeftCurlyBracket{ after(grammarAccess.getTerminalExpressionAccess().getLeftCurlyBracketLeftCurlyBracketParserRuleCall_14_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__DeclAssignment_14_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDeclDeclParserRuleCall_14_2_0()); }
	ruleDecl{ after(grammarAccess.getTerminalExpressionAccess().getDeclDeclParserRuleCall_14_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__CommaAssignment_14_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getCommaCommaParserRuleCall_14_3_0_0()); }
	ruleComma{ after(grammarAccess.getTerminalExpressionAccess().getCommaCommaParserRuleCall_14_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__DeclAssignment_14_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getDeclDeclParserRuleCall_14_3_1_0()); }
	ruleDecl{ after(grammarAccess.getTerminalExpressionAccess().getDeclDeclParserRuleCall_14_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__BlockOrBarAssignment_14_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getBlockOrBarBlockOrBarParserRuleCall_14_4_0()); }
	ruleBlockOrBar{ after(grammarAccess.getTerminalExpressionAccess().getBlockOrBarBlockOrBarParserRuleCall_14_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TerminalExpression__RightCurlyBracketAssignment_14_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTerminalExpressionAccess().getRightCurlyBracketRightCurlyBracketParserRuleCall_14_5_0()); }
	ruleRightCurlyBracket{ after(grammarAccess.getTerminalExpressionAccess().getRightCurlyBracketRightCurlyBracketParserRuleCall_14_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__PropertyNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getPropertyNamePropertyNameParserRuleCall_2_0()); }
	rulePropertyName{ after(grammarAccess.getDeclAccess().getPropertyNamePropertyNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__CommaAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getCommaCommaParserRuleCall_3_0_0()); }
	ruleComma{ after(grammarAccess.getDeclAccess().getCommaCommaParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__PropertyNameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getPropertyNamePropertyNameParserRuleCall_3_1_0()); }
	rulePropertyName{ after(grammarAccess.getDeclAccess().getPropertyNamePropertyNameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__ColonAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getColonColonParserRuleCall_4_0()); }
	ruleColon{ after(grammarAccess.getDeclAccess().getColonColonParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Decl__ExprAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclAccess().getExprExpressionParserRuleCall_6_0()); }
	ruleExpression{ after(grammarAccess.getDeclAccess().getExprExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetDecl__NameExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetDeclAccess().getNameExpressionPropertyNameParserRuleCall_0_0()); }
	rulePropertyName{ after(grammarAccess.getLetDeclAccess().getNameExpressionPropertyNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetDecl__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetDeclAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getLetDeclAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinOp__DotAssignment_1_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinOpAccess().getDotDotParserRuleCall_1_12_0()); }
	ruleDot{ after(grammarAccess.getBinOpAccess().getDotDotParserRuleCall_1_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnOp__OpAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnOpAccess().getOpAlternatives_1_3_0()); }
(rule__UnOp__OpAlternatives_1_3_0)
{ after(grammarAccess.getUnOpAccess().getOpAlternatives_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrowOp__ArrowAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrowOpAccess().getArrowHyphenMinusGreaterThanSignKeyword_1_0()); }
(
{ before(grammarAccess.getArrowOpAccess().getArrowHyphenMinusGreaterThanSignKeyword_1_0()); }

	'->' 

{ after(grammarAccess.getArrowOpAccess().getArrowHyphenMinusGreaterThanSignKeyword_1_0()); }
)

{ after(grammarAccess.getArrowOpAccess().getArrowHyphenMinusGreaterThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__LeftCAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCLeftCurlyBracketParserRuleCall_0_0()); }
	ruleLeftCurlyBracket{ after(grammarAccess.getBlockAccess().getLeftCLeftCurlyBracketParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getBlockAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__RightCAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCRightCurlyBracketParserRuleCall_2_0()); }
	ruleRightCurlyBracket{ after(grammarAccess.getBlockAccess().getRightCRightCurlyBracketParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockOrBar__BlockAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockOrBarAccess().getBlockBlockParserRuleCall_0_0()); }
	ruleBlock{ after(grammarAccess.getBlockOrBarAccess().getBlockBlockParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockOrBar__ExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockOrBarAccess().getExprExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getBlockOrBarAccess().getExprExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpenName__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpenNameAccess().getImportURINameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getOpenNameAccess().getImportURINameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FactName__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFactNameAccess().getNameNameParserRuleCall_2_0()); }
	ruleName{ after(grammarAccess.getFactNameAccess().getNameNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionName__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionNameAccess().getNameNameParserRuleCall_2_0()); }
	ruleName{ after(grammarAccess.getAssertionNameAccess().getNameNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionNameAccess().getNameNameParserRuleCall_0()); }
	ruleName{ after(grammarAccess.getFunctionNameAccess().getNameNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredicateName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredicateNameAccess().getNameNameParserRuleCall_0()); }
	ruleName{ after(grammarAccess.getPredicateNameAccess().getNameNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Alias__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAliasAccess().getNameNameAliasParserRuleCall_0()); }
	ruleNameAlias{ after(grammarAccess.getAliasAccess().getNameNameAliasParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumName__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumNameAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getEnumNameAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumPropertyName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumPropertyNameAccess().getNameNameParserRuleCall_0()); }
	ruleName{ after(grammarAccess.getEnumPropertyNameAccess().getNameNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetName__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetNameAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getLetNameAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignatureName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureNameAccess().getNameNameParserRuleCall_0()); }
	ruleName{ after(grammarAccess.getSignatureNameAccess().getNameNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyNameAccess().getNameNameParserRuleCall_0()); }
	ruleName{ after(grammarAccess.getPropertyNameAccess().getNameNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExactlyName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExactlyNameAccess().getNameNameParserRuleCall_0()); }
	ruleName{ after(grammarAccess.getExactlyNameAccess().getNameNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AsName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAsNameAccess().getNameNameParserRuleCall_0()); }
	ruleName{ after(grammarAccess.getAsNameAccess().getNameNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferencesSig__NameRefAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferencesSigAccess().getNameRefSignatureNameCrossReference_1_0_0()); }
(
{ before(grammarAccess.getReferencesSigAccess().getNameRefSignatureNameIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getReferencesSigAccess().getNameRefSignatureNameIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getReferencesSigAccess().getNameRefSignatureNameCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ref__NameRefAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRefAccess().getNameRefReferencesNameCrossReference_1_0_0()); }
(
{ before(grammarAccess.getRefAccess().getNameRefReferencesNameIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRefAccess().getNameRefReferencesNameIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getRefAccess().getNameRefReferencesNameCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeftCurlyBracket__LeftCurlyBracketAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeftCurlyBracketAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_0()); }
(
{ before(grammarAccess.getLeftCurlyBracketAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getLeftCurlyBracketAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_0()); }
)

{ after(grammarAccess.getLeftCurlyBracketAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RightCurlyBracket__RightCurlyBracketAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightCurlyBracketAccess().getRightCurlyBracketRightCurlyBracketKeyword_0()); }
(
{ before(grammarAccess.getRightCurlyBracketAccess().getRightCurlyBracketRightCurlyBracketKeyword_0()); }

	'}' 

{ after(grammarAccess.getRightCurlyBracketAccess().getRightCurlyBracketRightCurlyBracketKeyword_0()); }
)

{ after(grammarAccess.getRightCurlyBracketAccess().getRightCurlyBracketRightCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Dot__DotAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDotAccess().getDotFullStopKeyword_0()); }
(
{ before(grammarAccess.getDotAccess().getDotFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getDotAccess().getDotFullStopKeyword_0()); }
)

{ after(grammarAccess.getDotAccess().getDotFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comma__CommaAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommaAccess().getCommaCommaKeyword_0()); }
(
{ before(grammarAccess.getCommaAccess().getCommaCommaKeyword_0()); }

	',' 

{ after(grammarAccess.getCommaAccess().getCommaCommaKeyword_0()); }
)

{ after(grammarAccess.getCommaAccess().getCommaCommaKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Colon__ColonAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColonAccess().getColonColonKeyword_0()); }
(
{ before(grammarAccess.getColonAccess().getColonColonKeyword_0()); }

	':' 

{ after(grammarAccess.getColonAccess().getColonColonKeyword_0()); }
)

{ after(grammarAccess.getColonAccess().getColonColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeftParenthesis__LeftParenthesisAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeftParenthesisAccess().getLeftParenthesisLeftParenthesisKeyword_0()); }
(
{ before(grammarAccess.getLeftParenthesisAccess().getLeftParenthesisLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getLeftParenthesisAccess().getLeftParenthesisLeftParenthesisKeyword_0()); }
)

{ after(grammarAccess.getLeftParenthesisAccess().getLeftParenthesisLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RightParenthesis__RightParenthesisAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightParenthesisAccess().getRightParenthesisRightParenthesisKeyword_0()); }
(
{ before(grammarAccess.getRightParenthesisAccess().getRightParenthesisRightParenthesisKeyword_0()); }

	')' 

{ after(grammarAccess.getRightParenthesisAccess().getRightParenthesisRightParenthesisKeyword_0()); }
)

{ after(grammarAccess.getRightParenthesisAccess().getRightParenthesisRightParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeftSquareBracketKeyword__LeftSquareBracketKeywordAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeftSquareBracketKeywordAccess().getLeftSquareBracketKeywordLeftSquareBracketKeyword_0()); }
(
{ before(grammarAccess.getLeftSquareBracketKeywordAccess().getLeftSquareBracketKeywordLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getLeftSquareBracketKeywordAccess().getLeftSquareBracketKeywordLeftSquareBracketKeyword_0()); }
)

{ after(grammarAccess.getLeftSquareBracketKeywordAccess().getLeftSquareBracketKeywordLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RightSquareBracketKeyword__RightSquareBracketKeywordAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRightSquareBracketKeywordAccess().getRightSquareBracketKeywordRightSquareBracketKeyword_0()); }
(
{ before(grammarAccess.getRightSquareBracketKeywordAccess().getRightSquareBracketKeywordRightSquareBracketKeyword_0()); }

	']' 

{ after(grammarAccess.getRightSquareBracketKeywordAccess().getRightSquareBracketKeywordRightSquareBracketKeyword_0()); }
)

{ after(grammarAccess.getRightSquareBracketKeywordAccess().getRightSquareBracketKeywordRightSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NEGATIVE_INTEGER : '-' RULE_INT;

RULE_SL_COMMENT : ('//' ~(('\n'|'\r'))* ('\r'? '\n')?|'--' ( options {greedy=false;} : . )*'\n');

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* ('\''|'"')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


